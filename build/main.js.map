{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bookings.service.ts","webpack:///./src/app/config.service.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/event-action-script/event-action-script.component.css","webpack:///./src/app/event-action-script/event-action-script.component.html","webpack:///./src/app/event-action-script/event-action-script.component.ts","webpack:///./src/app/init.service.ts","webpack:///./src/app/log/log.component.css","webpack:///./src/app/log/log.component.html","webpack:///./src/app/log/log.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/overview-event-action-list/overview-event-action-list.component.css","webpack:///./src/app/overview-event-action-list/overview-event-action-list.component.html","webpack:///./src/app/overview-event-action-list/overview-event-action-list.component.ts","webpack:///./src/app/overview-instance-list/overview-instance-list.component.css","webpack:///./src/app/overview-instance-list/overview-instance-list.component.html","webpack:///./src/app/overview-instance-list/overview-instance-list.component.ts","webpack:///./src/app/overview/overview.component.css","webpack:///./src/app/overview/overview.component.html","webpack:///./src/app/overview/overview.component.ts","webpack:///./src/app/script-editor/script-editor.component.css","webpack:///./src/app/script-editor/script-editor.component.html","webpack:///./src/app/script-editor/script-editor.component.ts","webpack:///./src/app/server.service.ts","webpack:///./src/app/settings/settings.component.css","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/sockets.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { OverviewComponent } from \"./overview/overview.component\";\nimport { MenuComponent } from \"./menu/menu.component\";\nimport { LogComponent } from \"./log/log.component\";\nimport { ScriptEditorComponent } from \"./script-editor/script-editor.component\";\nimport { EventActionScriptComponent } from \"./event-action-script/event-action-script.component\";\n\nconst routes: Routes = [\n  { path: \"settings\", component: SettingsComponent },\n  { path: \"overview\", component: OverviewComponent },\n  { path: \"menu\", component: MenuComponent },\n  { path: \"log\", component: LogComponent },\n  { path: \"script-editor\", component: ScriptEditorComponent },\n  { path: \"event-action\", component: EventActionScriptComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n          <app-menu></app-menu>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <app-overview-instance-list></app-overview-instance-list>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <router-outlet></router-outlet>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { InitService } from \"./init.service\";\r\n// import { SocketsService } from \"./sockets.service\"\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\nexport class AppComponent {\r\n  title = \"SeraphimFrontEnd\";\r\n  constructor(public init: InitService) {\r\n    init.init();\r\n    // socket.init();\r\n  }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { SlickCarouselModule } from \"ngx-slick-carousel\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { SettingsComponent } from \"./settings/settings.component\";\r\nimport { OverviewComponent } from \"./overview/overview.component\";\r\nimport { MenuComponent } from \"./menu/menu.component\";\r\nimport { LogComponent } from \"./log/log.component\";\r\nimport { EventActionScriptComponent } from \"./event-action-script/event-action-script.component\";\r\nimport { InitService } from \"./init.service\";\r\nimport { SocketsService } from \"./sockets.service\";\r\nimport { OverviewEventActionListComponent } from \"./overview-event-action-list/overview-event-action-list.component\";\r\nimport { OverviewInstanceListComponent } from \"./overview-instance-list/overview-instance-list.component\";\r\nimport { ScriptEditorComponent } from \"./script-editor/script-editor.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SettingsComponent,\r\n    OverviewComponent,\r\n    MenuComponent,\r\n    LogComponent,\r\n    EventActionScriptComponent,\r\n    OverviewEventActionListComponent,\r\n    OverviewInstanceListComponent,\r\n    ScriptEditorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    SlickCarouselModule\r\n  ],\r\n  providers: [InitService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class BookingsService {\r\n  bookings: any;\r\n  api: any;\r\n  secretKey: any;\r\n  apiKey: any;\r\n  productsUrl: any;\r\n  bookingsUrl: any;\r\n  startTime: any;\r\n  endTime: any;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.api = \"https://api.bookeo.com/v2/\";\r\n    this.secretKey = \"secretKey=7RrMyipwOpedho7XwsrGFoKvSAi7nAp8\";\r\n    this.apiKey = \"apiKey=ARUF9PN63MTWK9FXJK7H33350CPFK9Y1583F6ECD42\";\r\n    this.createStartTime().then(sTime => {\r\n      this.startTime = sTime;\r\n      this.createEndTime().then(eTime => {\r\n        this.endTime = eTime;\r\n      });\r\n    });\r\n  }\r\n\r\n  getUpcomingBookings(): Observable<any> {\r\n    return this.http.get(\r\n      `${this.api}bookings?startTime=${this.startTime}&endTime=${\r\n        this.endTime\r\n      }&${this.secretKey}&${this.apiKey}`\r\n    );\r\n  }\r\n\r\n  createStartTime() {\r\n    return new Promise((resolve, reject) => {\r\n      const d = new Date();\r\n      const monthNum = d.getMonth() + 1;\r\n      const monthStr = monthNum.toString().padStart(2, \"0\");\r\n      const dayStr = d\r\n        .getDate()\r\n        .toString()\r\n        .padStart(2, \"0\");\r\n      const result = `${d.getFullYear()}-${monthStr}-${dayStr}T00:00:00-00:00`;\r\n      resolve(result);\r\n    });\r\n  }\r\n\r\n  createEndTime() {\r\n    return new Promise((resolve, reject) => {\r\n      const date = new Date();\r\n      this.promiseDateAdd(date, \"day\", 30).then(da => {\r\n        let d: any;\r\n        d = da;\r\n        const monthNum = d.getMonth() + 1;\r\n        const monthStr = monthNum.toString().padStart(2, \"0\");\r\n        const dayStr = d\r\n          .getDate()\r\n          .toString()\r\n          .padStart(2, \"0\");\r\n        const result = `${d.getFullYear()}-${monthStr}-${dayStr}T00:00:00-00:00`;\r\n        resolve(result);\r\n      });\r\n    });\r\n  }\r\n\r\n  promiseDateAdd(date, interval, units) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.dateAdd(date, interval, units));\r\n    });\r\n  }\r\n\r\n  dateAdd(date, interval, units) {\r\n    let ret = new Date(date); // don't change original date\r\n    const checkRollover = function() {\r\n      if (ret.getDate() !== date.getDate()) {\r\n      }\r\n      ret.setDate(0);\r\n    };\r\n    switch (interval.toLowerCase()) {\r\n      case \"year\":\r\n        ret.setFullYear(ret.getFullYear() + units);\r\n        checkRollover();\r\n        break;\r\n      case \"quarter\":\r\n        ret.setMonth(ret.getMonth() + 3 * units);\r\n        checkRollover();\r\n        break;\r\n      case \"month\":\r\n        ret.setMonth(ret.getMonth() + units);\r\n        checkRollover();\r\n        break;\r\n      case \"week\":\r\n        ret.setDate(ret.getDate() + 7 * units);\r\n        break;\r\n      case \"day\":\r\n        ret.setDate(ret.getDate() + units);\r\n        break;\r\n      case \"hour\":\r\n        ret.setTime(ret.getTime() + units * 3600000);\r\n        break;\r\n      case \"minute\":\r\n        ret.setTime(ret.getTime() + units * 60000);\r\n        break;\r\n      case \"second\":\r\n        ret.setTime(ret.getTime() + units * 1000);\r\n        break;\r\n      default:\r\n        ret = undefined;\r\n        break;\r\n    }\r\n    return ret;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ConfigService {\r\n  public api = `http://localhost:4300`;\r\n  constructor() {}\r\n\r\n  public getApiUrl() {\r\n    return this.api;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { SocketsService } from \"./sockets.service\";\r\nimport { ServerService } from \"./server.service\";\r\nimport { BehaviorSubject, Observable, Subscription } from \"rxjs\";\r\nimport { promise } from \"protractor\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class DataService {\r\n  // ======= instance overview data TODO: implement\r\n  public scriptInstances: any; // JSON objct of instances\r\n  public selectedScriptInstance: any;\r\n  public observableScriptInstance: any;\r\n  public observableScriptInstanceList: any;\r\n  public socketSubscription: Subscription;\r\n\r\n  // ======== Script editor data\r\n  public scriptEditor_selectedScript: any;\r\n  public scriptEditor_allScripts: any;\r\n  public scriptEditor_observableSelectedScript: any;\r\n  public scriptEditor_observableScriptList: any;\r\n\r\n  // ========= Branch Server settings\r\n  public branch_selectedBranch: any;\r\n  public branch_allBranches: any;\r\n  public branch_observableSelectedBranch: any;\r\n  public branch_observableBranchList: any;\r\n\r\n  constructor(public server: ServerService, public socket: SocketsService) {\r\n    this.observableScriptInstance = new BehaviorSubject<any>(\r\n      this.selectedScriptInstance\r\n    );\r\n    this.scriptEditor_observableSelectedScript = new BehaviorSubject<any>(\r\n      this.scriptEditor_selectedScript\r\n    );\r\n    this.scriptEditor_observableScriptList = new BehaviorSubject<any>(\r\n      this.scriptEditor_allScripts\r\n    );\r\n\r\n    this.branch_observableBranchList = new BehaviorSubject<any>(\r\n      this.branch_allBranches\r\n    );\r\n    this.branch_observableSelectedBranch = new BehaviorSubject<any>(\r\n      this.branch_selectedBranch\r\n    );\r\n    this.scriptEditor_getAllScripts();\r\n  }\r\n\r\n  // flow:\r\n  // component subscribes to changes to script\r\n  // component requests the data to be updated\r\n  // data then updates and sends a .next to observables\r\n\r\n  // ==============================\r\n  // Branches\r\n  // ==============================\r\n\r\n  branch_observableUpdate() {\r\n    this.branch_observableSelectedBranch.next(this.branch_getSelectedBranch());\r\n  }\r\n\r\n  branch_observableListUpdate() {\r\n    this.branch_observableBranchList.next(this.branch_getAllBranches());\r\n  }\r\n  branch_subscribe(): Observable<any> {\r\n    return this.branch_selectedBranch;\r\n  }\r\n\r\n  branch_setSelectedBranch(branchId) {\r\n    this.branch_getAllBranches();\r\n    this.findBranch(branchId).then(branch => {\r\n      console.log(\"Setting editing branch to: \", branch);\r\n      this.branch_selectedBranch = branch;\r\n      this.branch_observableUpdate();\r\n    });\r\n  }\r\n\r\n  branch_serverGetAllBranches() {\r\n    this.server.readAllBranches().subscribe(branchList => {\r\n      this.branch_allBranches = branchList;\r\n      console.log(branchList);\r\n      this.branch_observableListUpdate();\r\n    });\r\n  }\r\n  branch_getSelectedBranch() {\r\n    return this.branch_selectedBranch;\r\n  }\r\n\r\n  branch_getAllBranches() {\r\n    return this.branch_allBranches;\r\n  }\r\n\r\n  branch_updateSelectedBranch(branch) {\r\n    this.server.updateBranch(branch).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  branch_deleteBranch(id) {\r\n    this.server.deleteBranch(id).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  branch_createNewBranch(name, ip) {\r\n    let branch = new BranchModel(name, 1, ip);\r\n    this.server.createBranch(branch).subscribe(result => {\r\n      console.log(result);\r\n      this.branch_allBranches.push(branch);\r\n    });\r\n  }\r\n\r\n  findBranch(id) {\r\n    return new Promise((resolve, reject) => {\r\n      for (let i = 0; i < this.branch_allBranches.length; i++) {\r\n        const branch = this.branch_allBranches[i];\r\n        if (branch.id == id) {\r\n          resolve(branch);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  branch_getAllBranchNodes(branchId) {\r\n    this.server.getBridgeNodes(branchId).subscribe(nodes => {\r\n      this.findBranch(branchId).then(branch => {\r\n        branch[\"nodes\"] = nodes;\r\n        this.branch_observableListUpdate();\r\n      });\r\n    });\r\n  }\r\n\r\n  branch_editNodeCommonId(node) {\r\n    var msg = {\r\n      header: {\r\n        branchAddress: node.branchAddress,\r\n        bridgeId: node.bridgeId,\r\n        nodeType: node.bridgeType\r\n      },\r\n      message: {\r\n        id: node.bridgeId,\r\n        message: {\r\n          toId: node.nodeId,\r\n          command: {\r\n            type: \"setId\",\r\n            message: node.newId\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.server.editNodeCommonId(msg).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n {\"id\":\"10\",\r\n \"message\":{\r\n  \"toId\" : \"3209423301\",\r\n\t\"command\" : {\r\n\t\t\"type\" : \"functionChange\",\r\n\t\t\"toId\": \"3209423301\",\r\n\t\t\"message\" : \"button\"\r\n        }\r\n  }\r\n}\r\n   *\r\n   *\r\n   */\r\n\r\n  branch_editNodeType(node) {\r\n    var msg = {\r\n      header: {\r\n        branchAddress: node.branchAddress,\r\n        bridgeId: node.bridgeId,\r\n        nodeType: node.bridgeType\r\n      },\r\n      message: {\r\n        id: node.bridgeId,\r\n        message: {\r\n          toId: node.nodeId,\r\n          command: {\r\n            type: \"functionChange\",\r\n            message: node.newType\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.server.editNodeCommonId(msg).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  branch_sendNodeAction(node) {\r\n    var actionPkt = this.createActionPacketToSend(\r\n      node.nodeId,\r\n      node.action,\r\n      node.actionType,\r\n      node.data\r\n    );\r\n    var msg = {\r\n      header: {\r\n        branchAddress: node.branchAddress,\r\n        bridgeId: node.bridgeId,\r\n        nodeType: node.bridgeType\r\n      },\r\n      message: {\r\n        id: node.bridgeId,\r\n        message: actionPkt\r\n      }\r\n    };\r\n    this.server.sendNodeAction(msg).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  branch_deleteVideo(name, branchIp) {\r\n    let msg = {\r\n      name: name,\r\n      branchIp: branchIp,\r\n      type: \"video\"\r\n    };\r\n    this.server.branchDeleteMedia(msg).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  branch_deleteAudio(name, branchIp) {\r\n    let msg = {\r\n      name: name,\r\n      branchIp: branchIp,\r\n      type: \"audio\"\r\n    };\r\n    this.server.branchDeleteMedia(msg).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  branch_uploadVideo(fd) {\r\n    this.server.branchUploadVideo(fd).subscribe(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  branch_uploadAudio(fd) {\r\n    this.server.branchUploadAudio(fd).subscribe(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n  // ==============================\r\n  // Script editor\r\n  // ==============================\r\n\r\n  scriptEditor_observableUpdate() {\r\n    this.scriptEditor_observableSelectedScript.next(\r\n      this.scriptEditor_getSelectedScript()\r\n    );\r\n  }\r\n\r\n  scriptEditor_observableListUpdate() {\r\n    this.scriptEditor_observableScriptList.next(\r\n      this.scriptEditor_getAllLocalScripts()\r\n    );\r\n  }\r\n  scriptEditor_subscribe(): Observable<any> {\r\n    return this.scriptEditor_selectedScript;\r\n  }\r\n\r\n  scriptEditor_setSelectedScript(scriptName) {\r\n    this.findScript(scriptName).then(script => {\r\n      // console.log(\"Setting editing script to: \", scriptName, script);\r\n      this.scriptEditor_selectedScript = script;\r\n      this.scriptEditor_observableUpdate();\r\n    });\r\n  }\r\n\r\n  scriptEditor_getSelectedScript() {\r\n    return this.scriptEditor_selectedScript;\r\n  }\r\n\r\n  scriptEditor_getAllLocalScripts() {\r\n    return this.scriptEditor_allScripts;\r\n  }\r\n\r\n  scriptEditor_getAllScripts() {\r\n    this.server.getFreshScriptsForEditing().subscribe((scriptList: any) => {\r\n      this.scriptEditor_allScripts = scriptList;\r\n      console.log(scriptList);\r\n      this.scriptEditor_observableListUpdate();\r\n    });\r\n    // this.server.loadScripts().subscribe((scriptList: any) => {\r\n    //   this.scriptEditor_allScripts = scriptList;\r\n    //   console.log(scriptList);\r\n    //   this.scriptEditor_observableListUpdate();\r\n    // });\r\n  }\r\n\r\n  scriptEditor_updateSelectedScript(instanceUpdate) {\r\n    for (let i = 0; i < this.scriptEditor_allScripts.length; i++) {\r\n      if (this.scriptEditor_allScripts[i].name === instanceUpdate.name) {\r\n        this.scriptEditor_allScripts[i] = instanceUpdate;\r\n        this.scriptEditor_observableListUpdate();\r\n        this.server.updateScript(instanceUpdate).subscribe(result => {\r\n          console.log(result);\r\n        });\r\n        console.log(this.scriptEditor_allScripts);\r\n      }\r\n    }\r\n  }\r\n\r\n  scriptEditorSendHttpRequest(type, url, body = \"\") {\r\n    let msg = {\r\n      type: type,\r\n      url: url,\r\n      body: body\r\n    };\r\n    this.server.triggerSendHttpRequest(msg).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  // ==============================\r\n  // Overview\r\n  // ==============================\r\n\r\n  overview_getNewScript(scriptName) {\r\n    return new Promise((resolve, reject) => {\r\n      this.findScript(scriptName).then(script => {\r\n        resolve(script);\r\n      });\r\n    });\r\n  }\r\n\r\n  selectedScriptInstanceChange() {\r\n    this.observableScriptInstance.next(this.selectedScriptInstance);\r\n  }\r\n\r\n  setSelectedScriptInstance(script) {\r\n    this.selectedScriptInstance = this.scriptInstances[`${script.name}`];\r\n    // this.selectedScriptInstance = script;\r\n    this.selectedScriptInstanceChange();\r\n  }\r\n\r\n  scriptInstanceListChange() {\r\n    this.observableScriptInstanceList.next(this.scriptInstances);\r\n  }\r\n\r\n  // TODO:\r\n  // Make the callers eg overview - call data.serveice, data.service then updates its scripts\r\n  createInstanceModel(sInstance: any) {\r\n    const sModel = {\r\n      name: sInstance.name,\r\n      time: { hrs: 0, min: 0, sec: 0 },\r\n      ended: \"false\",\r\n      states: [],\r\n      script: sInstance\r\n    };\r\n\r\n    this.scriptInstances[`${sModel.name}`] = sModel;\r\n  }\r\n\r\n  getLocalScriptInstance(InstanceName): Observable<any> {\r\n    return this.scriptInstances[`${InstanceName}`];\r\n  }\r\n\r\n  updateLocalScriptInstance(instanceUpdate) {\r\n    this.scriptInstances[`${instanceUpdate.name}`] = instanceUpdate;\r\n  }\r\n\r\n  deleteLocalScriptInstance(instanceName) {\r\n    this.scriptInstances[`${instanceName}`] = null;\r\n  }\r\n\r\n  // ==================== Calls to server =======================\r\n  initLoadAllScriptInstances() {\r\n    this.server.loadScripts().subscribe(instances => {\r\n      for (const key of instances) {\r\n        this.createInstanceModel(instances[`${key}`]);\r\n      }\r\n    });\r\n  }\r\n\r\n  serverLoadScript(name) {\r\n    this.server.loadScript(name).subscribe(script => {\r\n      this.selectedScriptInstance = script;\r\n      console.log(\"=====TEST NEW DATA SERVICE =====\", script);\r\n      this.selectedScriptInstanceChange();\r\n    });\r\n  }\r\n  // ==================== Socket updates ========================\r\n\r\n  // ==================== Helpers ========================\r\n\r\n  createActionPacketToSend(nodeId, action, actionType, data) {\r\n    let result = {\r\n      toId: nodeId,\r\n      state: {\r\n        type: \"action\",\r\n        message: {\r\n          action: action,\r\n          actionType: actionType,\r\n          data: data\r\n        }\r\n      }\r\n    };\r\n    return result;\r\n  }\r\n\r\n  findScript(scriptName) {\r\n    return new Promise((resolve, reject) => {\r\n      for (const instance of this.scriptEditor_allScripts) {\r\n        if (instance.name === scriptName) {\r\n          resolve(instance);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  newEventModel() {\r\n    return new Promise((resolve, reject) => {\r\n      const model = new ScriptEventModel();\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  newActionModel() {\r\n    return new Promise((resolve, reject) => {\r\n      const model = new ScriptActionModel();\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  newHintModel() {\r\n    return new Promise((resolve, reject) => {\r\n      const model = new ScriptHintModel();\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  newTriggerModel() {\r\n    return new Promise((resolve, reject) => {\r\n      const model = new ScriptTriggerModel();\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  newStateModel() {\r\n    return new Promise((resolve, reject) => {\r\n      const model = new ScriptStateModel();\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  getNewScriptModel() {\r\n    return new Promise((resolve, reject) => {\r\n      let model = new EventActionScriptModel(\"UNSET SCRIPT\");\r\n      this.setDefaultEventsAndStates(model).then(s => {\r\n        resolve(model);\r\n      });\r\n    });\r\n  }\r\n\r\n  newScreenConfigModel() {\r\n    return new Promise((resolve, reject) => {\r\n      const model = new ScreenConfigModel();\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  setDefaultEventsAndStates(model: EventActionScriptModel) {\r\n    return new Promise((resolve, reject) => {\r\n      let startInstance = new ScriptStateModel();\r\n      startInstance.name = \"start_instance\";\r\n\r\n      let endInstance = new ScriptStateModel();\r\n      endInstance.name = \"end_instance\";\r\n\r\n      let timerComplete = new ScriptStateModel();\r\n      timerComplete.name = \"timer_complete\";\r\n\r\n      model.states.push(startInstance, endInstance, timerComplete);\r\n\r\n      let eStartInstance = new ScriptEventModel();\r\n      eStartInstance.name = \"start_instnace\";\r\n      model.events.push(eStartInstance);\r\n\r\n      let eEndInstance = new ScriptEventModel();\r\n      eEndInstance.name = \"end_instance\";\r\n      model.events.push(eEndInstance);\r\n\r\n      resolve(model);\r\n    });\r\n  }\r\n\r\n  newScriptModel() {\r\n    const timeModel = {\r\n      hours: \"0\",\r\n      minutes: \"60\",\r\n      seconds: \"0\"\r\n    };\r\n    const stateModel = {\r\n      name: \"\",\r\n      active: false\r\n    };\r\n\r\n    const eventModel = {\r\n      id: \"\",\r\n      name: \"\",\r\n      device_id: \"\",\r\n      event: \"\",\r\n      eventType: \"\",\r\n      data: \"\",\r\n      description: \"\",\r\n      dependencies: [],\r\n      actions: [],\r\n      message: \"\",\r\n      states: []\r\n    };\r\n\r\n    const actionModel = {\r\n      id: \"\",\r\n      name: \"\",\r\n      device_id: \"\",\r\n      event: \"\",\r\n      eventType: \"\",\r\n      action: \"\",\r\n      actionType: \"\",\r\n      wait: 0,\r\n      data: \"\",\r\n      description: \"\",\r\n      dependencies: [],\r\n      repeatable: true,\r\n      actions: [],\r\n      message: \"\",\r\n      states: []\r\n    };\r\n\r\n    const hintModel = {\r\n      name: \"\",\r\n      hint: \"\"\r\n    };\r\n\r\n    const triggerModel = {\r\n      name: \"\",\r\n      trigger: \"\",\r\n      audio: \"\",\r\n      video: \"\",\r\n      hint: \"\",\r\n      can_toggle: \"\"\r\n    };\r\n\r\n    const s = {\r\n      name: \"\",\r\n      id: \"\",\r\n      branch_address: \"\",\r\n      masterId: \"\",\r\n      time: new ScriptTimeModel(),\r\n      states: [new ScriptStateModel()],\r\n      events: [new ScriptEventModel()],\r\n      actions: [new ScriptActionModel()],\r\n      hints: [new ScriptHintModel()],\r\n      triggers: [new ScriptTriggerModel()]\r\n    };\r\n    // return new EventActionScriptModel(\"UNSET SCRIPT\");\r\n    return s;\r\n  }\r\n}\r\n\r\nexport class EventActionScriptModel {\r\n  public name: string;\r\n  public id: \"\";\r\n  public branch_address: \"\";\r\n  public masterId: \"\";\r\n  public time = new ScriptTimeModel();\r\n  public states: Array<ScriptStateModel>;\r\n  public events: Array<ScriptEventModel>;\r\n  public actions: Array<ScriptActionModel>;\r\n  public hints: Array<ScriptHintModel>;\r\n  public triggers: Array<ScriptTriggerModel>;\r\n  public screenConfigs: Array<ScreenConfigModel>;\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.states = new Array<ScriptStateModel>();\r\n    this.events = new Array<ScriptEventModel>();\r\n    this.actions = new Array<ScriptActionModel>();\r\n    this.hints = new Array<ScriptHintModel>();\r\n    this.triggers = new Array<ScriptTriggerModel>();\r\n    this.screenConfigs = new Array<ScreenConfigModel>();\r\n  }\r\n}\r\n\r\nexport class ScriptEventModel {\r\n  public id: string;\r\n  public name: string;\r\n  public device_id: string;\r\n  public event: string;\r\n  public eventType: string;\r\n  public data: string;\r\n  public description: string;\r\n  public dependencies: [];\r\n  public actions: [];\r\n  public message: string;\r\n  public states = [];\r\n\r\n  constructor() {\r\n    this.id = \"\";\r\n    this.name = \"\";\r\n    this.device_id = \"\";\r\n    this.event = \"\";\r\n    this.eventType = \"\";\r\n    this.data = \"\";\r\n    this.description = \"\";\r\n    this.dependencies = [];\r\n    this.actions = [];\r\n    this.message = \"\";\r\n    this.states = [];\r\n  }\r\n}\r\n\r\nexport class ScriptActionModel {\r\n  public id: string;\r\n  public name: string;\r\n  public device_id: string;\r\n  public action: string;\r\n  public actionType: string;\r\n  public wait: Number;\r\n  public data: string;\r\n  public description: string;\r\n  public dependencies: [];\r\n  public repeatable: true;\r\n  public actions: [];\r\n  public message: string;\r\n  public states: [];\r\n\r\n  constructor() {\r\n    this.id = \"\";\r\n    this.name = \"\";\r\n    this.device_id = \"\";\r\n    this.action = \"\";\r\n    this.actionType = \"\";\r\n    this.data = \"\";\r\n    this.description = \"\";\r\n    this.dependencies = [];\r\n    this.actions = [];\r\n    this.message = \"\";\r\n    this.states = [];\r\n    this.wait = 0;\r\n    this.repeatable = true;\r\n  }\r\n}\r\n\r\nexport class ScriptHintModel {\r\n  public name: \"\";\r\n  public hint: \"\";\r\n}\r\n\r\nexport class ScreenConfigModel {\r\n  public name = \"\";\r\n  public backgroundType = \"\";\r\n  public backgroundPath = \"\";\r\n  public audio = \"\";\r\n  public font = \"'Times New Roman', Times, serif\";\r\n  public font_colour = \"white\";\r\n  public showTimer = true;\r\n  public showHints = true;\r\n}\r\n\r\nexport class ScriptTriggerModel {\r\n  public name: string;\r\n  public trigger: string;\r\n  public audio: string;\r\n  public video: string;\r\n  public hint: string;\r\n  public can_toggle: string;\r\n  public screenName: String;\r\n  public httpRequestType: string;\r\n  public httpRequestUrl: string;\r\n  public httpRequestBody: string;\r\n\r\n  constructor() {\r\n    this.name = \"\";\r\n    this.trigger = \"\";\r\n    this.audio = \"\";\r\n    this.video = \"\";\r\n    this.hint = \"\";\r\n    this.can_toggle = \"\";\r\n    this.screenName = \"\";\r\n    this.httpRequestType = \"NONE\";\r\n    this.httpRequestUrl = \"\";\r\n    this.httpRequestBody = \"\";\r\n  }\r\n}\r\n\r\nexport class ScriptStateModel {\r\n  public name: string;\r\n  public active: boolean;\r\n\r\n  constructor() {\r\n    this.name = \"\";\r\n    this.active = false;\r\n  }\r\n}\r\n\r\nexport class ScriptTimeModel {\r\n  public hours = \"0\";\r\n  public minutes = \"60\";\r\n  public seconds = \"0\";\r\n}\r\n\r\nexport class BranchModel {\r\n  public id: any;\r\n  public name: any;\r\n  public rootserver_id: any;\r\n  public ip_address: any;\r\n  constructor(name, rootId, ipAddress) {\r\n    this.name = name;\r\n    this.rootserver_id = rootId;\r\n    this.ip_address = ipAddress;\r\n  }\r\n}\r\n\r\nexport class NodeBridgeModel {\r\n  public id: any;\r\n  public name: any;\r\n  public ip_address: any;\r\n  public branch_id: any;\r\n  constructor(name, ip, branchId) {\r\n    this.name = name;\r\n    this.ip_address = ip;\r\n    this.branch_id = branchId;\r\n  }\r\n}\r\n\r\nexport class NodeModel {\r\n  public id: any;\r\n  public name: any;\r\n  public type: any;\r\n  public last_alive: any;\r\n  public bridge_id: any;\r\n\r\n  constructor(name, type, lastAlive, bridgeId) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.last_alive = lastAlive;\r\n    this.bridge_id = bridgeId;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50LWFjdGlvbi1zY3JpcHQvZXZlbnQtYWN0aW9uLXNjcmlwdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  event-action-script works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-event-action-script',\n  templateUrl: './event-action-script.component.html',\n  styleUrls: ['./event-action-script.component.css']\n})\nexport class EventActionScriptComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { SocketsService } from \"./sockets.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class InitService {\r\n  socketSubscription: Subscription;\r\n  constructor(public socket: SocketsService) {}\r\n\r\n  init() {\r\n    this.startSocket();\r\n    // this.socket.init();\r\n    console.log(\"Init service\");\r\n  }\r\n\r\n  startSocket() {\r\n    this.socketSubscription = this.socket\r\n      .getMessages()\r\n      .subscribe((message: any) => {\r\n        // console.log(\"SOCKET: \", message);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy9sb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"dataLoaded\\\">\\r\\n<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">Room Name</th>\\r\\n        <th scope=\\\"col\\\">Booking Time</th>\\r\\n        <th scope=\\\"col\\\">Booking Name</th>\\r\\n        <th scope=\\\"col\\\">Participants</th>\\r\\n        <th scope=\\\"col\\\">Price</th>\\r\\n        <th scope=\\\"col\\\">Paid</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let b of bookings.data\\\">\\r\\n        <td>{{b?.productName}}</td>\\r\\n        <td>{{b?.startTime}}</td>\\r\\n        <td>{{b?.title}}</td>\\r\\n        <td>{{b?.participants.numbers[0].number}}</td>\\r\\n        <td>${{b?.price.totalGross.amount}}</td>\\r\\n        <td>${{b?.price.totalPaid.amount}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { BookingsService } from \"../bookings.service\";\r\n@Component({\r\n  selector: \"app-log\",\r\n  templateUrl: \"./log.component.html\",\r\n  styleUrls: [\"./log.component.css\"]\r\n})\r\nexport class LogComponent implements OnInit {\r\n  bookings: any;\r\n  dataLoaded: boolean;\r\n  constructor(public bookingService: BookingsService) {}\r\n\r\n  ngOnInit() {\r\n    this.getBookings();\r\n  }\r\n\r\n  getBookings() {\r\n    this.bookingService.getUpcomingBookings().subscribe(data => {\r\n      // this.bookings = data;\r\n      this.bookings = data;\r\n      this.dataLoaded = true;\r\n      console.log(data);\r\n      console.log(this.bookings);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" ngbButton (click)=\\\"navigate('overview')\\\">\\n    Overview\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" ngbButton (click)=\\\"navigate('script-editor')\\\">\\n    Script Editor\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" ngbButton (click)=\\\"navigate('settings')\\\">\\n    Settings\\n  </button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg btn-block\\\" ngbButton (click)=\\\"navigate('log')\\\">\\n    Log\\n  </button>\\n</nav>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { RouterModule, Routes, Router } from \"@angular/router\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-menu\",\n  templateUrl: \"./menu.component.html\",\n  styleUrls: [\"./menu.component.css\"]\n})\nexport class MenuComponent implements OnInit {\n  constructor(private router: Router, private ngbModule: NgbModule) {}\n  model: any = 1;\n\n  ngOnInit() {}\n\n  // Navigate by page name\n  navigate(page: string) {\n    console.log(\"navigate\", page);\n    this.router.navigateByUrl(`/${page}`);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL292ZXJ2aWV3LWV2ZW50LWFjdGlvbi1saXN0L292ZXJ2aWV3LWV2ZW50LWFjdGlvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<ngb-accordion #acc=\\\"ngbAccordion\\\" activeIds=\\\"ngb-panel-0\\\">\\r\\n      <template *ngFor=\\\"let event of script.events\\\">\\r\\n        <ngb-panel title=\\\"{{event.name}} : {{event.status}}\\\">\\r\\n          <ng-template ngbPanelContent>\\r\\n            <button (click)=\\\"sendForcedEvent(event.name)\\\">Force event {{event.name}}</button>\\r\\n            <hr>\\r\\n            <button *ngFor=\\\"let action of event.actions\\\" (click)=\\\"sendForcedAction(action)\\\">{{action}}</button>\\r\\n          </ng-template>\\r\\n        </ngb-panel>\\r\\n      </template>\\r\\n  </ngb-accordion>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ServerService } from \"../server.service\";\r\nimport { SocketsService } from \"../sockets.service\";\r\nimport { InitService } from \"../init.service\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-overview-event-action-list\",\r\n  templateUrl: \"./overview-event-action-list.component.html\",\r\n  styleUrls: [\"./overview-event-action-list.component.css\"]\r\n})\r\nexport class OverviewEventActionListComponent implements OnInit {\r\n  script: any;\r\n  socketSubscription: Subscription;\r\n\r\n  constructor(\r\n    public server: ServerService,\r\n    public socket: SocketsService,\r\n    public init: InitService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadScript();\r\n  }\r\n\r\n  loadScript() {\r\n    this.script = this.server.selectedScript;\r\n  }\r\n\r\n  sendForcedAction(actionName) {\r\n    console.log(actionName);\r\n    this.server\r\n      .sendForcedAction(this.script.name, actionName)\r\n      .subscribe(action => {\r\n        console.log(action);\r\n      });\r\n    this.socket.sendForcedAction(this.script.name, actionName);\r\n  }\r\n\r\n  sendForcedEvent(eventName) {\r\n    console.log(eventName);\r\n    this.server\r\n      .sendForcedEvent(this.script.name, eventName, this.script.time)\r\n      .subscribe(event => {\r\n        console.log(event);\r\n      });\r\n    this.socket.sendForcedEvent(this.script.name, eventName);\r\n  }\r\n\r\n  socketSubscribe() {\r\n    this.socketSubscription = this.socket\r\n      .getMessages()\r\n      .subscribe((message: any) => {\r\n        if (message.script_name === this.script.name) {\r\n          if (message.event !== undefined || message.event !== \"\") {\r\n            this.eventStatus(message.event);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  eventStatus(event) {\r\n    this.script.events.forEach(evt => {\r\n      if (evt.name === event.name) {\r\n        evt.status = event.status;\r\n      }\r\n    });\r\n  }\r\n\r\n  actionStatus(action) {\r\n    this.script.actions.forEach(act => {\r\n      if (act.name === action.name) {\r\n        act.status = action.status;\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".arrowDiv {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.prevArrow {\\r\\n  left: 5%;\\r\\n}\\r\\n\\r\\n\\r\\n.nextArrow {\\r\\n  right: 5%;\\r\\n  top: 0%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb3ZlcnZpZXctaW5zdGFuY2UtbGlzdC9vdmVydmlldy1pbnN0YW5jZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0NBQ2I7OztBQUdEO0VBQ0UsU0FBUztDQUNWOzs7QUFFRDtFQUNFLFVBQVU7RUFDVixRQUFRO0NBQ1QiLCJmaWxlIjoic3JjL2FwcC9vdmVydmlldy1pbnN0YW5jZS1saXN0L292ZXJ2aWV3LWluc3RhbmNlLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcnJvd0RpdiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4ucHJldkFycm93IHtcclxuICBsZWZ0OiA1JTtcclxufVxyXG5cclxuLm5leHRBcnJvdyB7XHJcbiAgcmlnaHQ6IDUlO1xyXG4gIHRvcDogMCU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div *ngIf=\\\"isDataAvailable\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div *ngIf=\\\"showCards; then Shown; else NotShown\\\">\\r\\n      </div>\\r\\n\\r\\n      <!-- TOP INSTANCE BUTTONS -->\\r\\n      <ng-template #Shown>\\r\\n        <div class=\\\"card-group\\\">\\r\\n          <div class=\\\"card\\\" *ngFor=\\\"let script of scripts; index as i;\\\" (click)=\\\"loadScript(script.name);\\\">\\r\\n            <button class=\\\"btn btn-success btn-block\\\" (click)=\\\"loadScript(script.name);\\\">\\r\\n              <!-- <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"slickSetCardState(script.name, true)\\\">+</button> -->\\r\\n              {{ script.name }}:: {{script.timeUpdate.hours}} : {{script.timeUpdate.minutes}} :\\r\\n              {{script.timeUpdate.seconds}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n\\r\\n      <ng-template #NotShown>\\r\\n        <div class=\\\"card-group\\\">\\r\\n          <div class=\\\"card\\\" *ngFor=\\\"let script of scripts; index as i;\\\" (click)=\\\"showInstances(true)\\\">\\r\\n            <button class=\\\"btn btn-success btn-block\\\" (click)=\\\"loadScript(script.name)\\\">\\r\\n              {{ script.name }} :: {{script.timeUpdate.hours}} : {{script.timeUpdate.minutes}} :\\r\\n              {{script.timeUpdate.seconds}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"showCards\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <button class=\\\"prevArrow btn btn-warning\\\" (click)=\\\"slickModal.slickPrev()\\\">&lt;</button>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-10\\\"></div>\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n      <button class=\\\"nextArrow btn btn-warning\\\" (click)=\\\"slickModal.slickNext()\\\">&gt;</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- BELOW is the new layout for the things.... -->\\r\\n  <ngx-slick-carousel id=\\\"slick\\\" class=\\\"carousel\\\" [config]=\\\"slideConfig\\\" #slickModal=\\\"slick-carousel\\\">\\r\\n    <ng-container *ngFor=\\\"let script of scripts; index as i;\\\">\\r\\n      <!-- <template *ngIf=\\\"script.ui_show; then setCardDisplayStyle(true)\\\"></template> -->\\r\\n      <div ngxSlickItem class=\\\"slide\\\" #showCard>\\r\\n\\r\\n        <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n          <h4 class=\\\"card-header\\\">\\r\\n            <!-- <button (click)=\\\"slickSetCardState(script.name, false, i)\\\" class=\\\"btn btn-danger btn-sm\\\">-</button> -->\\r\\n            {{script?.name}}</h4>\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n\\r\\n            <!-- TIME DISPLAY -->\\r\\n            <h3>{{script.timeUpdate?.hours}}:{{script.timeUpdate?.minutes}}:{{script.timeUpdate?.seconds}}</h3>\\r\\n\\r\\n            <!-- HINT DISPLAY -->\\r\\n            <h6 id=\\\"{{script.name}}_hintDisplay\\\">{{script.displayedHint}}</h6>\\r\\n            <hr />\\r\\n            <!-- TIME UPDATE -->\\r\\n            <div class=\\\"input-group input-group-sm\\\">\\r\\n              <input type=\\\"text\\\" aria-label=\\\"hours\\\" placeholder=\\\"Hours\\\" id=\\\"{{script.name}}_inputHours\\\" class=\\\"form-control\\\">\\r\\n              <input type=\\\"text\\\" aria-label=\\\"Minutes\\\" placeholder=\\\"Minutes\\\" id=\\\"{{script.name}}_inputMinutes\\\" class=\\\"form-control\\\">\\r\\n              <input type=\\\"text\\\" aria-label=\\\"Seconds\\\" placeholder=\\\"Seconds\\\" id=\\\"{{script.name}}_inputSeconds\\\" class=\\\"form-control\\\">\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-info\\\" (click)=\\\"updateTime(script.name)\\\" type=\\\"button\\\">Update</button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- PAUSE / RESUME TIME -->\\r\\n            <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Start/End\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"pauseGameTimer(script.name)\\\">Pause\\r\\n                Time</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" (click)=\\\"resumeGameTimer(script.name)\\\">Resume\\r\\n                Time</button>\\r\\n            </div>\\r\\n\\r\\n            <hr />\\r\\n\\r\\n            <!-- HINT INPUT-->\\r\\n            <div class=\\\"input-group input-group-sm\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Hint text\\\" aria-label=\\\"Type the hint to display\\\" id=\\\"{{script.name}}_hintInput\\\">\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\\\"\\r\\n                  data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                  <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\r\\n                </button>\\r\\n                <div class=\\\"dropdown-menu\\\">\\r\\n                  <button class=\\\"dropdown-item\\\" *ngFor=\\\"let hint of script.hints\\\" (click)=\\\"insertHint(script.name, hint.hint)\\\">{{hint.name}}</button>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sendHint(script.name)\\\" type=\\\"button\\\">Send</button>\\r\\n                <button class=\\\"btn btn-outline-danger\\\" (click)=\\\"clearHint(script.name)\\\" type=\\\"button\\\">Clear</button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <hr />\\r\\n\\r\\n            <!-- START / END INSTANCE -->\\r\\n            <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"Start/End\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"startNewInstance(script.name)\\\">Start\\r\\n                Instance</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"endInstance(script.name)\\\">End Instance</button>\\r\\n            </div>\\r\\n\\r\\n            <hr />\\r\\n\\r\\n            <!-- EVENTS -->\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <ul class=\\\"list-group\\\">\\r\\n                  <li class=\\\"list-group-item\\\" *ngFor=\\\"let event of script.events\\\">\\r\\n                    <div class=\\\"btn-group btn-group-sm btn-group-block\\\" style=\\\"width:100%\\\" role=\\\"group\\\" aria-label=\\\"Start/End\\\">\\r\\n                      <button class=\\\"btn btn-primary btn-sm btn-block\\\" (click)=\\\"sendEvent(script.name, event.name, script.timeUpdate)\\\">{{event?.name}}\\r\\n                        {{event?.status}} -\\r\\n                        {{event.completed_time?.hours}}\\r\\n                        : {{event.completed_time?.minutes}}\\r\\n                        : {{event.completed_time?.seconds}}\\r\\n                      </button>\\r\\n                      <div class=\\\"button-group-append\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"showActionsModal(script.name, event)\\\">Actions</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <hr />\\r\\n            <div class=\\\"btn-group btn-group-sm btn-group-block\\\" style=\\\"width:100%\\\" role=\\\"group\\\" aria-label=\\\"Triggers\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"showTriggersModal(script.name, script.triggers)\\\">Triggers</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"showAudioModal(script.name, script.triggers)\\\">Audio</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-sm\\\" (click)=\\\"showVideoModal(script.name, script.triggers)\\\">Video</button>\\r\\n            </div>\\r\\n\\r\\n            <hr />\\r\\n\\r\\n            <!-- STATES -->\\r\\n            <ul class=\\\"list-group\\\">\\r\\n              <li class=\\\"list-group-item\\\" *ngFor=\\\"let state of script.states\\\">{{state.name}} : {{state.active}}</li>\\r\\n            </ul>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            <small class=\\\"text-muted\\\">{{script.name}}</small>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-template #hiddenCard>\\r\\n    </ng-template>\\r\\n\\r\\n  </ngx-slick-carousel>\\r\\n  <!-- </div> -->\\r\\n\\r\\n\\r\\n  <ng-template #actionModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">{{tempEventToShow.name}} Actions</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let action of tempEventToShow.actions\\\">\\r\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"sendAction(tempScriptName, action)\\\">\\r\\n            Fire Action\\r\\n          </button>\\r\\n          {{action}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <ng-template #triggerModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">{{tempScriptName}} Triggers</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <!-- TRIGGERS -->\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item list-group-item\\\" *ngFor=\\\"let trigger of tempTriggersToShow\\\">\\r\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"sendTrigger(tempScriptName, trigger)\\\">Fire</button>\\r\\n          {{trigger.name}}\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n  <ng-template #audioModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">{{tempScriptName}} Audio</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <!-- AUDIO -->\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item list-group-item\\\" *ngFor=\\\"let trigger of tempTriggersToShow\\\">\\r\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"sendAudio(tempScriptName, trigger.audio, trigger.screenName)\\\">Play</button>{{trigger.audio}}\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n  <ng-template #videoModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">{{tempScriptName}} Video</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <!-- VIDEO -->\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item list-group-item\\\" *ngFor=\\\"let trigger of tempTriggersToShow\\\">\\r\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"triggerPlayVideo(tempScriptName, trigger.video, trigger.screenName)\\\">Play</button>\\r\\n          {{trigger.video}}\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\"","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  PLATFORM_ID,\r\n  Inject\r\n} from \"@angular/core\";\r\nimport { ServerService } from \"../server.service\";\r\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SocketsService } from \"../sockets.service\";\r\nimport { DataService } from \"../data.service\";\r\nimport { InitService } from \"../init.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport {\r\n  RouterModule,\r\n  Routes,\r\n  Router,\r\n  ActivatedRoute,\r\n  Event,\r\n  NavigationEnd\r\n} from \"@angular/router\";\r\nimport { SlicePipe } from \"@angular/common\";\r\nimport * as $ from \"jquery\";\r\nimport { promise } from \"protractor\";\r\n\r\n@Component({\r\n  selector: \"app-overview-instance-list\",\r\n  templateUrl: \"./overview-instance-list.component.html\",\r\n  styleUrls: [\"./overview-instance-list.component.css\"]\r\n})\r\nexport class OverviewInstanceListComponent implements OnInit {\r\n  scripts: any;\r\n  socketSubscription: Subscription;\r\n  isDataAvailable = false;\r\n\r\n  routeSubscription: Subscription;\r\n\r\n  @ViewChild(\"slickModal\") slickModal: any;\r\n  @ViewChild(\"actionModal\") actionModal: any;\r\n  @ViewChild(\"eventModal\") eventModal: any;\r\n  @ViewChild(\"triggerModal\") triggerModal: any;\r\n  @ViewChild(\"audioModal\") audioModal: any;\r\n  @ViewChild(\"videoModal\") videoModal: any;\r\n\r\n  //For modal views\r\n  tempScriptName: any;\r\n  tempEventToShow: any;\r\n  tempTriggersToShow: any;\r\n\r\n  showCards = false;\r\n\r\n  slideConfig = {\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    dots: true,\r\n    infinite: false,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1100,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n    public dataService: DataService,\r\n    public server: ServerService,\r\n    public socket: SocketsService,\r\n    public init: InitService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    private modalService: NgbModal\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loadAllScripts().then(scripts => {\r\n      this.isDataAvailable = true;\r\n      this.scripts = scripts;\r\n      for (const s of this.scripts) {\r\n        // NOTE: add specific values to check here\r\n        s.timeUpdate = { hours: 0, minutes: 0, seconds: 0 };\r\n        s.ended = false;\r\n      }\r\n      this.socketSubscribe();\r\n    });\r\n    this.routeSubscribe();\r\n  }\r\n\r\n  routeSubscribe() {\r\n    this.routeSubscription = this.router.events.subscribe((event: Event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (event.url === \"/overview\") {\r\n          this.showInstances(true);\r\n        } else {\r\n          this.showInstances(false);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  showInstances(canShow) {\r\n    this.showCards = canShow;\r\n  }\r\n\r\n  toggleInstances() {\r\n    this.showCards = !this.showCards;\r\n  }\r\n\r\n  loadAllScripts() {\r\n    return new Promise((resolve, reject) => {\r\n      this.server.loadScripts().subscribe(scripts => {\r\n        console.log(scripts, \"loaded\");\r\n        resolve(scripts);\r\n      });\r\n    });\r\n  }\r\n\r\n  // to get the time and stuff\r\n  socketSubscribe() {\r\n    this.socketSubscription = this.socket\r\n      .getMessages()\r\n      .subscribe((message: any) => {\r\n        this.parseSocketMessage(message);\r\n        // foreach instance check if the name matches, then update the time\r\n      });\r\n  }\r\n\r\n  parseSocketMessage(msg: any) {\r\n    if (!msg.hasOwnProperty(\"instance_update\")) {\r\n      return;\r\n    }\r\n    for (const script of this.scripts) {\r\n      if (script.name === msg.instance_update.script.name) {\r\n        script.events = msg.instance_update.script.events;\r\n        script.actions = msg.instance_update.script.actions;\r\n        script.timeUpdate = msg.instance_update.time;\r\n        script.ended = msg.instance_update.ended;\r\n        script.states = msg.instance_update.states;\r\n      }\r\n    }\r\n    this.server.updateLocalScripts(msg.instance_update);\r\n  }\r\n\r\n  loadScript(name) {\r\n    this.server.loadScript(name).subscribe(script => {\r\n      this.server.setSelectedScript(script);\r\n      // this.dataService.setSelectedScriptInstance(script);\r\n      this.router.navigateByUrl(`/overview`);\r\n      console.log(script);\r\n    });\r\n  }\r\n\r\n  setDisplayedHint(scriptName, hintText) {\r\n    for (let i = 0; i < this.scripts.length; i++) {\r\n      const script = this.scripts[i];\r\n      if (script.name == scriptName) {\r\n        script.displayedHint = hintText;\r\n      }\r\n    }\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= HINT CONTROLS ============================\r\n  // ========================================================\r\n  sendHint(scriptName) {\r\n    let hintText = $(`#${scriptName}_hintInput`).val();\r\n    const msg = {\r\n      scriptName: scriptName,\r\n      hintText: hintText\r\n    };\r\n    this.server.hintSendCustomHint(msg).subscribe(result => {\r\n      console.log(\"Sending hint: \", result);\r\n      // $(`#${scriptName}_hintDisplay`).html(hintText);\r\n      this.setDisplayedHint(scriptName, hintText);\r\n    });\r\n    //Send here\r\n  }\r\n\r\n  insertHint(scriptName, hintText) {\r\n    $(`#${scriptName}_hintInput`).val(hintText);\r\n  }\r\n\r\n  clearHint(scriptName) {\r\n    $(`#${scriptName}_hintInput`).val(\"\");\r\n    // $(`#${scriptName}_hintDisplay`).html(\"\");\r\n    this.setDisplayedHint(scriptName, \"\");\r\n\r\n    const msg = {\r\n      scriptName: scriptName,\r\n      hintText: \"--clear--\"\r\n    };\r\n    this.server.clearHint(msg).subscribe(result => {\r\n      console.log(\"Clearing hint: \", result);\r\n    });\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= EVENT CONTROLS ===========================\r\n  // ========================================================\r\n  sendEvent(scriptName, eventName, timeUpdate) {\r\n    console.log(eventName);\r\n    this.server\r\n      .sendForcedEvent(scriptName, eventName, timeUpdate)\r\n      .subscribe(event => {\r\n        console.log(event);\r\n      });\r\n    this.socket.sendForcedEvent(scriptName, eventName);\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= ACTION CONTROLS ==========================\r\n  // ========================================================\r\n  sendAction(scriptName, actionName) {\r\n    console.log(actionName);\r\n    this.server.sendForcedAction(scriptName, actionName).subscribe(action => {\r\n      console.log(action);\r\n    });\r\n    this.socket.sendForcedAction(scriptName, actionName);\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= TIME CONTROLS ============================\r\n  // ========================================================\r\n  updateTime(scriptName) {\r\n    let hrs, mins, sec;\r\n    let hours = $(`#${scriptName}_inputHours`).val();\r\n    let minutes = $(`#${scriptName}_inputMinutes`).val();\r\n    let seconds = $(`#${scriptName}_inputSeconds`).val();\r\n    if (hours === \"\") {\r\n      hrs = 0;\r\n    } else {\r\n      hrs = parseInt(hours, 10);\r\n    }\r\n    if (minutes === \"\") {\r\n      mins = 0;\r\n    } else {\r\n      mins = parseInt(minutes, 10);\r\n    }\r\n    if (seconds === \"\") {\r\n      sec = 0;\r\n    } else {\r\n      sec = parseInt(seconds, 10);\r\n    }\r\n    this.server.updateCustomTime(scriptName, hrs, mins, sec).subscribe(time => {\r\n      console.log(\"======= Updated time =======\", time);\r\n    });\r\n  }\r\n\r\n  pauseGameTimer(scriptName) {\r\n    this.server.pauseGameTimer(scriptName).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  resumeGameTimer(scriptName) {\r\n    this.server.resumeGameTimer(scriptName).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= START / END ==============================\r\n  // ========================================================\r\n  startNewInstance(scriptName) {\r\n    this.dataService.overview_getNewScript(scriptName).then(script => {\r\n      let s: any;\r\n      s = script;\r\n      let t = s.time;\r\n      this.server\r\n        .startNewGame(\r\n          script,\r\n          parseInt(t.hours, 10),\r\n          parseInt(t.minutes, 10),\r\n          parseInt(t.seconds, 10)\r\n        )\r\n        .subscribe(status => {\r\n          console.log(status);\r\n          this.sendEvent(scriptName, \"start_instance\", 0);\r\n        });\r\n    });\r\n  }\r\n\r\n  endInstance(scriptName) {\r\n    this.server.endGame(scriptName).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= TRIGGERS =================================\r\n  // ========================================================\r\n  sendTrigger(scriptName, trigger) {\r\n    const msg = {\r\n      scriptName: scriptName,\r\n      trigger: trigger,\r\n      screenName: trigger.screenName\r\n    };\r\n    this.server.triggerForceTrigger(msg).subscribe(result => {\r\n      console.log(\"Forcing trigger: \", msg, result);\r\n    });\r\n  }\r\n\r\n  sendAudio(scriptName, audioFile, screenName) {\r\n    const msg = {\r\n      scriptName: scriptName,\r\n      audioFile: audioFile,\r\n      screenName: screenName\r\n    };\r\n    this.server.triggerPlayAudio(msg).subscribe(result => {\r\n      console.log(\"Playing Audio: \", result);\r\n    });\r\n  }\r\n\r\n  triggerPlayVideo(scriptName, videoFile, screenName) {\r\n    const msg = {\r\n      scriptName: scriptName,\r\n      videoFile: videoFile,\r\n      screenName: screenName\r\n    };\r\n    this.server.triggerPlayVideo(msg).subscribe(result => {\r\n      console.log(\"Playing Video: \", result);\r\n    });\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= SLICK SLIDER =============================\r\n  // ========================================================\r\n  slickGoTo(index) {\r\n    this.slickModal.slickGoTo(index);\r\n  }\r\n\r\n  shownCards = new Array();\r\n\r\n  slickSetCardState(scriptName, state, index = 0) {\r\n    for (var i = 0; i < this.scripts.length; i++) {\r\n      if (this.scripts[i].name === scriptName) {\r\n        this.scripts[i][\"ui_show\"] = state;\r\n        if (state) {\r\n          this.shownCards.push(this.scripts[i]);\r\n          console.log(\"pushing\", this.scripts[i].name);\r\n          console.log(this.shownCards);\r\n        } else {\r\n          for (let j = 0; j < this.shownCards.length; j++) {\r\n            if (this.shownCards[j].name === scriptName) {\r\n              console.log(this.shownCards);\r\n\r\n              this.shownCards.splice(j, 1);\r\n            }\r\n          }\r\n          this.refreshPage();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  refreshPage() {\r\n    this.router\r\n      .navigateByUrl(\"/settings\", { skipLocationChange: true })\r\n      .then(() => {\r\n        this.router.navigate([\"/overview\"]);\r\n      })\r\n      .then(() => {});\r\n  }\r\n\r\n  beforeChange(e) {\r\n    console.log(e);\r\n  }\r\n\r\n  toggleSlick() {\r\n    return new Promise((resolve, reject) => {\r\n      this.slickModal.unslick();\r\n    }).then(() => {\r\n      // this.slickModal.initSlick(this.slideConfig);\r\n    });\r\n  }\r\n\r\n  // ========================================================\r\n  // ============= MODAL CONTROLLERS \\=======================\r\n  // ========================================================\r\n  showActionsModal(scriptName, event) {\r\n    this.modalService.open(this.actionModal, { size: \"lg\" });\r\n    this.tempScriptName = scriptName;\r\n    this.tempEventToShow = event;\r\n  }\r\n\r\n  showTriggersModal(scriptName, triggers) {\r\n    this.modalService.open(this.triggerModal, { size: \"lg\" });\r\n    this.tempScriptName = scriptName;\r\n    this.tempTriggersToShow = triggers;\r\n  }\r\n  showAudioModal(scriptName, triggers) {\r\n    this.modalService.open(this.audioModal, { size: \"lg\" });\r\n    this.tempScriptName = scriptName;\r\n    this.tempTriggersToShow = triggers;\r\n  }\r\n  showVideoModal(scriptName, triggers) {\r\n    this.modalService.open(this.videoModal, { size: \"lg\" });\r\n    this.tempScriptName = scriptName;\r\n    this.tempTriggersToShow = triggers;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL292ZXJ2aWV3L292ZXJ2aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <div *ngIf=\\\"isDataAvailable\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <h2>{{ script?.name }}</h2>\\r\\n        <hr />\\r\\n        <div *ngIf=\\\"script?.timeUpdate\\\">\\r\\n          <h2>{{script.timeUpdate.hours}} : {{script.timeUpdate.minutes}} : {{script.timeUpdate.seconds}}</h2>\\r\\n        </div>\\r\\n        <br />\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let state of script.states\\\">{{state.name}} : {{state.active}}</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"timer_duration\\\"> Timer duration </label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hours\\\" id=\\\"timer_duration_hours\\\" value=\\\"1\\\" placeholder=\\\"Hours\\\" />\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"minutes\\\" id=\\\"timer_duration_minutes\\\" placeholder=\\\"minutes\\\" />\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"seconds\\\" id=\\\"timer_duration_seconds\\\" placeholder=\\\"seconds\\\" />\\r\\n        </div>\\r\\n        <hr />\\r\\n        <button id=\\\"update_game_timer\\\" type=\\\"button\\\" class=\\\"btn btn-success-outline\\\" (click)=\\\"updateCustomTimer()\\\">\\r\\n          Update Game timer\\r\\n        </button>\\r\\n        <button id=\\\"start_game_timer\\\" type=\\\"button\\\" class=\\\"btn btn-success-outline\\\" (click)=\\\"resumeGameTimer()\\\">\\r\\n          Start Game timer\\r\\n        </button>\\r\\n        <button id=\\\"stop_game_timer\\\" type=\\\"button\\\" class=\\\"btn btn-danger-outline\\\" (click)=\\\"pauseGameTimer()\\\">\\r\\n          Pause Game Timer\\r\\n        </button>\\r\\n        <hr />\\r\\n        <button id=\\\"new_game\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"startNewGame()\\\">\\r\\n          Start New Game\\r\\n        </button>\\r\\n        <button id=\\\"end_game\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"endGame()\\\">\\r\\n          End Game\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n\\r\\n        <div class=\\\"card text-white bg-dark mb-3\\\">\\r\\n          <div class=\\\"card-header\\\">Hints</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <ul class=\\\"list-group\\\">\\r\\n              <li class=\\\"list-group-item list-group-item-dark\\\" *ngFor=\\\"let hint of script?.hints\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"hintSendHint(hint)\\\">Copy</button>\\r\\n                {{hint?.name}}\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card text-white bg-dark mb-3\\\">\\r\\n          <div class=\\\"card-header\\\">Triggers</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <ul class=\\\"list-group\\\">\\r\\n              <li class=\\\"list-group-item list-group-item-dark\\\" *ngFor=\\\"let trigger of script?.triggers\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"triggerForceTrigger(trigger)\\\">Fire</button>\\r\\n                {{trigger.name}}\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <label for=\\\"hintInput\\\"> Hint </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintInput\\\" [(ngModel)]=\\\"hintText\\\" name=\\\"hintInput\\\" />\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"hintSendCustomHint()\\\">Send Hint</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clearHint()\\\">\\r\\n          Clear message\\r\\n        </button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"card text-white bg-dark mb-3\\\">\\r\\n          <div class=\\\"card-header\\\">Audio Controls</div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n\\r\\n            <ul class=\\\"list-group\\\">\\r\\n              <li class=\\\"list-group-item list-group-item-dark\\\" *ngFor=\\\"let trigger of script?.triggers\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"triggerPlayAudio(trigger.audio)\\\">{{trigger.audio}}</button>\\r\\n              </li>\\r\\n            </ul>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let event of script.events\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"sendForcedEvent(event.name)\\\">Fire Event</button>\\r\\n            {{event?.name}} : {{event?.status}} - {{event.completed_time?.hours}} : {{event.completed_time?.minutes}} :\\r\\n            {{event.completed_time?.seconds}}\\r\\n            <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n              <ngb-panel title=\\\"Show Actions\\\">\\r\\n                <ng-template ngbPanelContent>\\r\\n                  <ul class=\\\"list-group\\\">\\r\\n                    <li class=\\\"list-group-item\\\" *ngFor=\\\"let action of event.actions\\\">\\r\\n                      <button class=\\\"btn btn-primary\\\" (click)=\\\"sendForcedAction(action)\\\">\\r\\n                        Fire Action\\r\\n                      </button>\\r\\n                      {{action}}\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </ng-template>\\r\\n              </ngb-panel>\\r\\n            </ngb-accordion>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div> -->\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ServerService } from \"../server.service\";\r\nimport { SocketsService } from \"../sockets.service\";\r\nimport { InitService } from \"../init.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DataService } from \"../data.service\";\r\nimport {\r\n  RouterModule,\r\n  Routes,\r\n  Router,\r\n  NavigationStart,\r\n  ActivatedRoute\r\n} from \"@angular/router\";\r\nimport { promise } from \"protractor\";\r\n\r\n@Component({\r\n  selector: \"app-overview\",\r\n  templateUrl: \"./overview.component.html\",\r\n  styleUrls: [\"./overview.component.css\"]\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n  socketSubscription: Subscription;\r\n  scriptSubscription: Subscription;\r\n  hintText: any;\r\n  time: any;\r\n  script: any;\r\n  scripts: any;\r\n  scriptName: any;\r\n  isDataAvailable = false;\r\n\r\n  hours: any;\r\n  minutes: any;\r\n  seconds: any;\r\n\r\n  constructor(\r\n    public server: ServerService,\r\n    public socket: SocketsService,\r\n    public init: InitService,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    public dataService: DataService\r\n  ) {\r\n    // this.loadScriptSubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.loadScriptSubscribe();\r\n    // this.socketSubscribe();\r\n  }\r\n\r\n  loadScript() {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.server.selectedScript);\r\n    });\r\n  }\r\n\r\n  loadScriptSubscribe() {\r\n    this.scriptSubscription = this.server.observableScript.subscribe(script => {\r\n      this.script = script;\r\n      this.isDataAvailable = true;\r\n    });\r\n  }\r\n\r\n  startNewGame() {\r\n    this.script = null;\r\n    this.loadScript().then(loadedScript => {\r\n      console.log(loadedScript);\r\n      this.script = loadedScript;\r\n      const t = this.script.time;\r\n      this.server\r\n        .startNewGame(\r\n          this.script,\r\n          parseInt(t.hours, 10),\r\n          parseInt(t.minutes, 10),\r\n          parseInt(t.seconds, 10)\r\n        )\r\n        .subscribe(status => {\r\n          console.log(status);\r\n          this.sendForcedEvent(\"start_instance\");\r\n        });\r\n    });\r\n  }\r\n\r\n  endGame() {\r\n    this.server.endGame(this.script.name).subscribe(result => {\r\n      console.log(result);\r\n      // reset the game params here\r\n    });\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================= SOCKET MESSAGES  ============================ //\r\n  // ======================================================================= //\r\n\r\n  socketSubscribe() {\r\n    this.socketSubscription = this.socket\r\n      .getMessages()\r\n      .subscribe((message: any) => {\r\n        if (message.hasOwnProperty(\"instance_update\")) {\r\n          if (message.instance_update.name === this.script.name) {\r\n            this.parseSocketMessage(message);\r\n          }\r\n        }\r\n        if (message.hasOwnProperty(\"event\")) {\r\n          this.eventStatus(message.event);\r\n        }\r\n      });\r\n  }\r\n\r\n  parseSocketMessage(msg: any) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!msg.hasOwnProperty(\"instance_update\")) {\r\n        return;\r\n      }\r\n      this.script.events = msg.instance_update.script.events;\r\n      this.script.actions = msg.instance_update.script.actions;\r\n      this.script.timeUpdate = msg.instance_update.time;\r\n      this.script.ended = msg.instance_update.ended;\r\n      this.script.states = msg.instance_update.states;\r\n      console.log(\"==== socket message\", msg, this.script);\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================== TIMER  ===================================== //\r\n  // ======================================================================= //\r\n\r\n  startCustomTimer() {\r\n    let hrs, mins, sec;\r\n    if (this.hours === \"\") {\r\n      hrs = 0;\r\n    } else {\r\n      hrs = parseInt(this.hours, 10);\r\n    }\r\n    if (this.minutes === \"\") {\r\n      mins = 0;\r\n    } else {\r\n      mins = parseInt(this.minutes, 10);\r\n    }\r\n    if (this.seconds === \"\") {\r\n      sec = 0;\r\n    } else {\r\n      sec = parseInt(this.seconds, 10);\r\n    }\r\n    this.server\r\n      .startCustomTime(this.script.name, hrs, mins, sec)\r\n      .subscribe(time => {\r\n        console.log(time);\r\n      });\r\n  }\r\n  updateCustomTimer() {\r\n    let hrs, mins, sec;\r\n    if (this.hours === \"\") {\r\n      hrs = 0;\r\n    } else {\r\n      hrs = parseInt(this.hours, 10);\r\n    }\r\n    if (this.minutes === \"\") {\r\n      mins = 0;\r\n    } else {\r\n      mins = parseInt(this.minutes, 10);\r\n    }\r\n    if (this.seconds === \"\") {\r\n      sec = 0;\r\n    } else {\r\n      sec = parseInt(this.seconds, 10);\r\n    }\r\n    this.server\r\n      .updateCustomTime(this.script.name, hrs, mins, sec)\r\n      .subscribe(time => {\r\n        console.log(\"======= Updated time =======\", time);\r\n      });\r\n  }\r\n\r\n  pauseGameTimer() {\r\n    this.server.pauseGameTimer(this.script.name).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  resumeGameTimer() {\r\n    this.server.resumeGameTimer(this.script.name).subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================== EVENT ACTION  ============================== //\r\n  // ======================================================================= //\r\n\r\n  sendForcedAction(actionName) {\r\n    console.log(actionName);\r\n    this.server\r\n      .sendForcedAction(this.script.name, actionName)\r\n      .subscribe(action => {\r\n        console.log(action);\r\n      });\r\n    this.socket.sendForcedAction(this.script.name, actionName);\r\n  }\r\n\r\n  sendForcedEvent(eventName) {\r\n    console.log(eventName);\r\n    this.server\r\n      .sendForcedEvent(this.script.name, eventName, this.script.timeUpdate)\r\n      .subscribe(event => {\r\n        console.log(event);\r\n      });\r\n    this.socket.sendForcedEvent(this.script.name, eventName);\r\n  }\r\n\r\n  eventStatus(event) {\r\n    this.script.events.forEach(evt => {\r\n      if (evt.name === event.name) {\r\n        evt.status = event.status;\r\n        evt.completed_time = this.script.timeUpdate;\r\n        console.log(\"Updating Event: \", this.script);\r\n      }\r\n    });\r\n  }\r\n\r\n  actionStatus(action) {\r\n    this.script.actions.forEach(act => {\r\n      if (act.name === action.name) {\r\n        act.status = action.status;\r\n      }\r\n    });\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================== TRIGGERS  ================================== //\r\n  // ======================================================================= //\r\n  triggerForceTrigger(trigger) {\r\n    const msg = {\r\n      scriptName: this.script.name,\r\n      trigger: trigger,\r\n      screenName: trigger.screenName\r\n    };\r\n    this.server.triggerForceTrigger(msg).subscribe(result => {\r\n      console.log(\"Forcing trigger: \", msg, result);\r\n    });\r\n  }\r\n\r\n  triggerPlayAudio(audioFile) {\r\n    const msg = {\r\n      scriptName: this.script.name,\r\n      audioFile: audioFile\r\n    };\r\n    this.server.triggerPlayAudio(msg).subscribe(result => {\r\n      console.log(\"Playing Audio: \", result);\r\n    });\r\n  }\r\n\r\n  triggerPlayVideo(videoFile) {\r\n    const msg = {\r\n      scriptName: this.script.name,\r\n      videoFile: videoFile\r\n    };\r\n    this.server.triggerPlayVideo(msg).subscribe(result => {\r\n      console.log(\"Playing Video: \", result);\r\n    });\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================== HINTS  ===================================== //\r\n  // ======================================================================= //\r\n\r\n  hintSendHint(hint) {\r\n    const msg = {\r\n      scriptName: this.script.name,\r\n      hintText: this.hintText\r\n    };\r\n    this.hintText = hint.hint;\r\n    this.server.hintSendHint(msg).subscribe(result => {\r\n      console.log(\"Sending hint: \", result);\r\n    });\r\n  }\r\n\r\n  hintSendCustomHint() {\r\n    const msg = {\r\n      scriptName: this.script.name,\r\n      hintText: this.hintText\r\n    };\r\n    this.server.hintSendCustomHint(msg).subscribe(result => {\r\n      console.log(\"Sending hint: \", result);\r\n    });\r\n  }\r\n\r\n  clearHint() {\r\n    const msg = {\r\n      scriptName: this.script.name,\r\n      hintText: \"--clear--\"\r\n    };\r\n    this.hintText = \"\";\r\n    this.server.clearHint(msg).subscribe(result => {\r\n      console.log(\"Clearing hint: \", result);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"body {\\r\\n  font-family: 'Montserrat', 'Lato', 'Open Sans', 'Helvetica Neue', Helvetica, Calibri, Arial, sans-serif;\\r\\n  color: #6b7381;\\r\\n  background: #f2f2f2;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n  background: #6b7381;\\r\\n  color: #bdc1c8;\\r\\n}\\r\\n\\r\\n.jumbotron h1 {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.example {\\r\\n  margin: 4rem auto;\\r\\n}\\r\\n\\r\\n.example>.row {\\r\\n  margin-top: 2rem;\\r\\n  height: 5rem;\\r\\n  vertical-align: middle;\\r\\n  text-align: center;\\r\\n  border: 1px solid rgba(189, 193, 200, 0.5);\\r\\n}\\r\\n\\r\\n.example>.row:first-of-type {\\r\\n  border: none;\\r\\n  height: auto;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.example h3 {\\r\\n  font-weight: 400;\\r\\n}\\r\\n\\r\\n.example h3>small {\\r\\n  font-weight: 200;\\r\\n  font-size: 0.75em;\\r\\n  color: #939aa5;\\r\\n}\\r\\n\\r\\n.example h6 {\\r\\n  font-weight: 700;\\r\\n  font-size: 0.65rem;\\r\\n  letter-spacing: 3.32px;\\r\\n  text-transform: uppercase;\\r\\n  color: #bdc1c8;\\r\\n  margin: 0;\\r\\n  line-height: 5rem;\\r\\n}\\r\\n\\r\\n.example .btn-toggle {\\r\\n  top: 50%;\\r\\n  -webkit-transform: translateY(-50%);\\r\\n          transform: translateY(-50%);\\r\\n}\\r\\n\\r\\n.btn-toggle {\\r\\n  margin: 0 4rem;\\r\\n  padding: 0;\\r\\n  position: relative;\\r\\n  border: none;\\r\\n  height: 1.5rem;\\r\\n  width: 3rem;\\r\\n  border-radius: 1.5rem;\\r\\n  color: #6b7381;\\r\\n  background: #bdc1c8;\\r\\n}\\r\\n\\r\\n.btn-toggle:focus,\\r\\n.btn-toggle.focus,\\r\\n.btn-toggle:focus.active,\\r\\n.btn-toggle.focus.active {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.btn-toggle:before,\\r\\n.btn-toggle:after {\\r\\n  line-height: 1.5rem;\\r\\n  width: 4rem;\\r\\n  text-align: center;\\r\\n  font-weight: 600;\\r\\n  font-size: 0.75rem;\\r\\n  text-transform: uppercase;\\r\\n  letter-spacing: 2px;\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  transition: opacity 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle:before {\\r\\n  content: 'Off';\\r\\n  left: -4rem;\\r\\n}\\r\\n\\r\\n.btn-toggle:after {\\r\\n  content: 'On';\\r\\n  right: -4rem;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle>.handle {\\r\\n  position: absolute;\\r\\n  top: 0.1875rem;\\r\\n  left: 0.1875rem;\\r\\n  width: 1.125rem;\\r\\n  height: 1.125rem;\\r\\n  border-radius: 1.125rem;\\r\\n  background: #fff;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.active {\\r\\n  transition: background-color 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.active>.handle {\\r\\n  left: 1.6875rem;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.active:before {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:before,\\r\\n.btn-toggle.btn-sm:after {\\r\\n  line-height: -0.5rem;\\r\\n  color: #fff;\\r\\n  letter-spacing: 0.75px;\\r\\n  left: 0.4125rem;\\r\\n  width: 2.325rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:before {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:after {\\r\\n  text-align: left;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.active:before {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs:before,\\r\\n.btn-toggle.btn-xs:after {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.btn-toggle:before,\\r\\n.btn-toggle:after {\\r\\n  color: #6b7381;\\r\\n}\\r\\n\\r\\n.btn-toggle.active {\\r\\n  background-color: #29b5a8;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg {\\r\\n  margin: 0 5rem;\\r\\n  padding: 0;\\r\\n  position: relative;\\r\\n  border: none;\\r\\n  height: 2.5rem;\\r\\n  width: 5rem;\\r\\n  border-radius: 2.5rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg:focus,\\r\\n.btn-toggle.btn-lg.focus,\\r\\n.btn-toggle.btn-lg:focus.active,\\r\\n.btn-toggle.btn-lg.focus.active {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg:before,\\r\\n.btn-toggle.btn-lg:after {\\r\\n  line-height: 2.5rem;\\r\\n  width: 5rem;\\r\\n  text-align: center;\\r\\n  font-weight: 600;\\r\\n  font-size: 1rem;\\r\\n  text-transform: uppercase;\\r\\n  letter-spacing: 2px;\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  transition: opacity 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg:before {\\r\\n  content: 'Off';\\r\\n  left: -5rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg:after {\\r\\n  content: 'On';\\r\\n  right: -5rem;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg>.handle {\\r\\n  position: absolute;\\r\\n  top: 0.3125rem;\\r\\n  left: 0.3125rem;\\r\\n  width: 1.875rem;\\r\\n  height: 1.875rem;\\r\\n  border-radius: 1.875rem;\\r\\n  background: #fff;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.active {\\r\\n  transition: background-color 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.active>.handle {\\r\\n  left: 2.8125rem;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.active:before {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.btn-sm:before,\\r\\n.btn-toggle.btn-lg.btn-sm:after {\\r\\n  line-height: 0.5rem;\\r\\n  color: #fff;\\r\\n  letter-spacing: 0.75px;\\r\\n  left: 0.6875rem;\\r\\n  width: 3.875rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.btn-sm:before {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.btn-sm:after {\\r\\n  text-align: left;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.btn-sm.active:before {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.btn-sm.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-lg.btn-xs:before,\\r\\n.btn-toggle.btn-lg.btn-xs:after {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm {\\r\\n  margin: 0 0.5rem;\\r\\n  padding: 0;\\r\\n  position: relative;\\r\\n  border: none;\\r\\n  height: 1.5rem;\\r\\n  width: 3rem;\\r\\n  border-radius: 1.5rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:focus,\\r\\n.btn-toggle.btn-sm.focus,\\r\\n.btn-toggle.btn-sm:focus.active,\\r\\n.btn-toggle.btn-sm.focus.active {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:before,\\r\\n.btn-toggle.btn-sm:after {\\r\\n  line-height: 1.5rem;\\r\\n  width: 0.5rem;\\r\\n  text-align: center;\\r\\n  font-weight: 600;\\r\\n  font-size: 0.55rem;\\r\\n  text-transform: uppercase;\\r\\n  letter-spacing: 2px;\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  transition: opacity 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:before {\\r\\n  content: 'Off';\\r\\n  left: -0.5rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm:after {\\r\\n  content: 'On';\\r\\n  right: -0.5rem;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm>.handle {\\r\\n  position: absolute;\\r\\n  top: 0.1875rem;\\r\\n  left: 0.1875rem;\\r\\n  width: 1.125rem;\\r\\n  height: 1.125rem;\\r\\n  border-radius: 1.125rem;\\r\\n  background: #fff;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.active {\\r\\n  transition: background-color 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.active>.handle {\\r\\n  left: 1.6875rem;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.active:before {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.btn-sm:before,\\r\\n.btn-toggle.btn-sm.btn-sm:after {\\r\\n  line-height: -0.5rem;\\r\\n  color: #fff;\\r\\n  letter-spacing: 0.75px;\\r\\n  left: 0.4125rem;\\r\\n  width: 2.325rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.btn-sm:before {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.btn-sm:after {\\r\\n  text-align: left;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.btn-sm.active:before {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.btn-sm.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-sm.btn-xs:before,\\r\\n.btn-toggle.btn-sm.btn-xs:after {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs {\\r\\n  margin: 0 0;\\r\\n  padding: 0;\\r\\n  position: relative;\\r\\n  border: none;\\r\\n  height: 1rem;\\r\\n  width: 2rem;\\r\\n  border-radius: 1rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs:focus,\\r\\n.btn-toggle.btn-xs.focus,\\r\\n.btn-toggle.btn-xs:focus.active,\\r\\n.btn-toggle.btn-xs.focus.active {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs:before,\\r\\n.btn-toggle.btn-xs:after {\\r\\n  line-height: 1rem;\\r\\n  width: 0;\\r\\n  text-align: center;\\r\\n  font-weight: 600;\\r\\n  font-size: 0.75rem;\\r\\n  text-transform: uppercase;\\r\\n  letter-spacing: 2px;\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  transition: opacity 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs:before {\\r\\n  content: 'Off';\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs:after {\\r\\n  content: 'On';\\r\\n  right: 0;\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs>.handle {\\r\\n  position: absolute;\\r\\n  top: 0.125rem;\\r\\n  left: 0.125rem;\\r\\n  width: 0.75rem;\\r\\n  height: 0.75rem;\\r\\n  border-radius: 0.75rem;\\r\\n  background: #fff;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.active {\\r\\n  transition: background-color 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.active>.handle {\\r\\n  left: 1.125rem;\\r\\n  transition: left 0.25s;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.active:before {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.btn-sm:before,\\r\\n.btn-toggle.btn-xs.btn-sm:after {\\r\\n  line-height: -1rem;\\r\\n  color: #fff;\\r\\n  letter-spacing: 0.75px;\\r\\n  left: 0.275rem;\\r\\n  width: 1.55rem;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.btn-sm:before {\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.btn-sm:after {\\r\\n  text-align: left;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.btn-sm.active:before {\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.btn-sm.active:after {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-xs.btn-xs:before,\\r\\n.btn-toggle.btn-xs.btn-xs:after {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-secondary {\\r\\n  color: #6b7381;\\r\\n  background: #bdc1c8;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-secondary:before,\\r\\n.btn-toggle.btn-secondary:after {\\r\\n  color: #6b7381;\\r\\n}\\r\\n\\r\\n.btn-toggle.btn-secondary.active {\\r\\n  background-color: #ff8300;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","module.exports = \"<!-- {{! <img src='' onerror='get_rooms_from_game_script()'> }} -->\\r\\n\\r\\n<!-- <a href=\\\"https://github.com/flowhub/the-graph\\\">Change to this!!!!</a> -->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div id=\\\"instance_list\\\">\\r\\n        <h3>Scripts</h3>\\r\\n        <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n          <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li *ngFor=\\\"let script of scriptInstanceList\\\" class=\\\"list-group-item\\\">\\r\\n              {{ script.name }}\\r\\n              <br />\\r\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"loadScript(script.name)\\\">\\r\\n                Edit\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteScript(script.name)\\\">\\r\\n                Delete\\r\\n              </button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"showNewScriptNameModal()\\\">Add new script</button>\\r\\n        <br />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div id=\\\"event_action_list\\\">\\r\\n        <div *ngIf=\\\"scriptLoaded\\\">\\r\\n\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Branch Address :</span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"branch_address\\\" [(ngModel)]=\\\"scriptInstance.branch_address\\\"\\r\\n              value=\\\"{{ scriptInstance.branch_address }}\\\" />\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Branch Name :</span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"branch_name\\\" [(ngModel)]=\\\"scriptInstance.name\\\"\\r\\n              value=\\\"{{ scriptInstance.name }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Branch ID :</span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"branch_id\\\" [(ngModel)]=\\\"scriptInstance.id\\\"\\r\\n              value=\\\"{{ scriptInstance.id }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"input-group input-group-sm\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\">Master ID (Bridge):</span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"branch_masterId\\\" [(ngModel)]=\\\"scriptInstance.masterId\\\"\\r\\n              value=\\\"{{ scriptInstance.masterId }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group form-control-sm\\\">\\r\\n                <label for=\\\"branch_hours\\\"> Hours : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"branch_hours\\\" [(ngModel)]=\\\"scriptInstance.time.hours\\\"\\r\\n                  value=\\\"{{ scriptInstance.time.hours }}\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group form-control-sm\\\">\\r\\n                <label for=\\\"branch_minutes\\\"> Minutes : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"branch_minutes\\\" [(ngModel)]=\\\"scriptInstance.time.minutes\\\"\\r\\n                  value=\\\"{{ scriptInstance.time.minutes }}\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n              <div class=\\\"form-group form-control-sm\\\">\\r\\n                <label for=\\\"branch_seconds\\\"> Seconds : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"branch_seconds\\\" [(ngModel)]=\\\"scriptInstance.time.seconds\\\"\\r\\n                  value=\\\"{{ scriptInstance.time.seconds }}\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr />\\r\\n\\r\\n\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptSaveConfig()\\\">Save</button>\\r\\n\\r\\n          <hr />\\r\\n\\r\\n          <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n            <ngb-panel title=\\\"States : {{ scriptInstance.states?.length }}\\\">\\r\\n              <ng-template ngbPanelContent>\\r\\n                <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li *ngFor=\\\"let state of scriptInstance?.states\\\" class=\\\"list-group-item\\\">\\r\\n                      State: {{ state.name }}\\r\\n                      <br />\\r\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"scriptEditState(state.name)\\\">\\r\\n                        Edit\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteState(state.name)\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngb-panel>\\r\\n          </ngb-accordion>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptCreateNewState()\\\">Add State</button>\\r\\n          <hr />\\r\\n\\r\\n          <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n            <ngb-panel title=\\\"Actions : {{ scriptInstance.actions?.length }}\\\">\\r\\n              <ng-template ngbPanelContent>\\r\\n                <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li *ngFor=\\\"let action of scriptInstance?.actions\\\" class=\\\"list-group-item\\\">\\r\\n                      Action: {{ action.name }}\\r\\n                      <br />\\r\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"scriptEditAction(action.name)\\\">\\r\\n                        Edit\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteAction(action.name)\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngb-panel>\\r\\n          </ngb-accordion>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptCreateNewAction()\\\">Add Action</button>\\r\\n          <hr />\\r\\n\\r\\n          <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n            <ngb-panel title=\\\"Events : {{ scriptInstance.events?.length }}\\\">\\r\\n              <ng-template ngbPanelContent>\\r\\n                <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li *ngFor=\\\"let event of scriptInstance?.events\\\" class=\\\"list-group-item\\\">\\r\\n                      Event: {{ event.name }}\\r\\n                      <br />\\r\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"scriptEditEvent(event.name)\\\">\\r\\n                        Edit\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteEvent(event.name)\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngb-panel>\\r\\n          </ngb-accordion>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptCreateNewEvent()\\\">Add Event</button>\\r\\n          <hr />\\r\\n\\r\\n\\r\\n          <hr />\\r\\n          <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n            <ngb-panel title=\\\"Hints : {{ scriptInstance.hints?.length }}\\\">\\r\\n              <ng-template ngbPanelContent>\\r\\n                <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li *ngFor=\\\"let hint of scriptInstance?.hints\\\" class=\\\"list-group-item\\\">\\r\\n                      Hint: {{ hint.name }}\\r\\n                      <br />\\r\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"scriptEditHint(hint.name)\\\">\\r\\n                        Edit\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteHint(hint.name)\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngb-panel>\\r\\n          </ngb-accordion>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptCreateNewHint()\\\">Add Hint</button>\\r\\n          <hr />\\r\\n\\r\\n\\r\\n          <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n            <ngb-panel title=\\\"Screen Configurations : {{ scriptInstance.screenConfigs?.length }}\\\">\\r\\n              <ng-template ngbPanelContent>\\r\\n                <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li *ngFor=\\\"let config of scriptInstance?.screenConfigs\\\" class=\\\"list-group-item\\\">\\r\\n                      config: {{ config.name }}\\r\\n                      <br />\\r\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"scriptEditScreenConfig(config.name)\\\">\\r\\n                        Edit\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteScreenConfig(config.name)\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngb-panel>\\r\\n          </ngb-accordion>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptCreateNewScreenConfig()\\\">Add Screen</button>\\r\\n          <hr />\\r\\n\\r\\n          <ngb-accordion #acc=\\\"ngbAccordion\\\">\\r\\n            <ngb-panel title=\\\"Triggers : {{ scriptInstance.triggers?.length }}\\\">\\r\\n              <ng-template ngbPanelContent>\\r\\n                <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n                  <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li *ngFor=\\\"let trigger of scriptInstance?.triggers\\\" class=\\\"list-group-item\\\">\\r\\n                      Trigger: {{ trigger.name }}\\r\\n                      <br />\\r\\n                      <button class=\\\"btn btn-success\\\" (click)=\\\"scriptEditTrigger(trigger.name)\\\">\\r\\n                        Edit\\r\\n                      </button>\\r\\n                      <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteTrigger(trigger.name)\\\">\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </ngb-panel>\\r\\n          </ngb-accordion>\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"scriptCreateNewTrigger()\\\">Add Trigger</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- TRIGGER FORM --------------------------------------------------->\\r\\n<!-- -------------------------------------------------------------->\\r\\n\\r\\n\\r\\n<ng-template #triggerModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{triggerToEdit.name}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"triggerLoaded\\\">\\r\\n      <h3>Edit Trigger</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerName\\\"> Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"triggerName\\\" [(ngModel)]=\\\"triggerToEdit.name\\\" value=\\\"{{ triggerToEdit.name }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_trigger_select_state\\\"> State (To listen for) </label>\\r\\n        <select #triggerStateSelector class=\\\"selectpicker form-control\\\" id=\\\"gs_trigger_select_state\\\" [(ngModel)]=\\\"triggerToEdit.trigger\\\">\\r\\n          <option selected=\\\"selected\\\">{{ triggerToEdit.trigger }}</option>\\r\\n          <option *ngFor=\\\"let state of scriptInstance.states\\\">{{state.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_trigger_select_state\\\"> Screen to trigger on) </label>\\r\\n        <select #triggerStateSelector class=\\\"selectpicker form-control\\\" id=\\\"gs_trigger_select_state\\\" [(ngModel)]=\\\"triggerToEdit.screenName\\\">\\r\\n          <option selected=\\\"selected\\\">{{ triggerToEdit.screenName }}</option>\\r\\n          <option *ngFor=\\\"let config of scriptInstance.screenConfigs\\\">{{config.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerAudio\\\"> Audio file </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"triggerAudio\\\" [(ngModel)]=\\\"triggerToEdit.audio\\\" value=\\\"{{ triggerToEdit.audio }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_trigger_loop_audio\\\"> Loop Audio </label>\\r\\n        <div *ngIf=\\\"triggerToEdit.loop_audio\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"triggerToggleLoopAudio()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!triggerToEdit.loop_audio\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"triggerToggleLoopAudio()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_trigger_audio_type\\\"> Audio Type </label>\\r\\n        <select #eventTypeSelector class=\\\"selectpicker form-control\\\" id=\\\"gs_event_type_event\\\" [(ngModel)]=\\\"triggerToEdit.audio_type\\\">\\r\\n          <option selected=\\\"selected\\\">{{ triggerToEdit.audio_type }}</option>\\r\\n          <option>background</option>\\r\\n          <option>start</option>\\r\\n          <option>end</option>\\r\\n          <option>hint</option>\\r\\n          <option>custom</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <hr />\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerVideo\\\"> Video file </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"triggerVideo\\\" [(ngModel)]=\\\"triggerToEdit.video\\\" value=\\\"{{ triggerToEdit.video }}\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_trigger_loop_video\\\"> Loop Video </label>\\r\\n        <div *ngIf=\\\"triggerToEdit.loop_video\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"triggerToggleLoopVideo()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!triggerToEdit.loop_video\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"triggerToggleLoopVideo()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerVideoType\\\"> Video Type </label>\\r\\n        <select #eventTypeSelector class=\\\"selectpicker form-control\\\" id=\\\"triggerVideoType\\\" [(ngModel)]=\\\"triggerToEdit.video_type\\\">\\r\\n          <option selected=\\\"selected\\\">{{ triggerToEdit.video_type }}</option>\\r\\n          <option>background</option>\\r\\n          <option>custom</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerPauseTimer\\\"> Pause timer while playing video </label>\\r\\n        <div *ngIf=\\\"triggerToEdit.pause_timer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"triggerTogglePauseTimer()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!triggerToEdit.pause_timer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"triggerTogglePauseTimer()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <hr />\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerHint\\\"> Hint </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"triggerHint\\\" [(ngModel)]=\\\"triggerToEdit.hint\\\" value=\\\"{{ triggerToEdit.hint }}\\\" />\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerToggle\\\"> Can toggle (Is repeatable)</label>\\r\\n        <div *ngIf=\\\"triggerToEdit.can_toggle\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"triggerToggleRepeatable()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!triggerToEdit.can_toggle\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"triggerToggleRepeatable()\\\" data-toggle=\\\"button\\\"\\r\\n            aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n            <div class=\\\"handle\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <hr />\\r\\n      <h3>Advanced:</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_trigger_audio_type\\\"> Http Request Method </label>\\r\\n        <select #eventTypeSelector class=\\\"selectpicker form-control\\\" id=\\\"gs_event_type_event\\\" [(ngModel)]=\\\"triggerToEdit.httpRequestType\\\">\\r\\n          <option selected=\\\"selected\\\">{{ triggerToEdit.httpRequestType }}</option>\\r\\n          <option>GET</option>\\r\\n          <option>POST</option>\\r\\n          <option>PUT</option>\\r\\n          <option>PATCH</option>\\r\\n          <option>DELETE</option>\\r\\n          <option>NONE</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerHint\\\"> Http Request URL: </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"triggerHint\\\" [(ngModel)]=\\\"triggerToEdit.httpRequestUrl\\\" value=\\\"{{ triggerToEdit.httpRequestUrl }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"triggerHint\\\"> Http Request Body: </label>\\r\\n        <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"triggerHint\\\" [(ngModel)]=\\\"triggerToEdit.httpRequestBody\\\" value=\\\"{{ triggerToEdit.httpRequestBody }}\\\"></textarea>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"saveEditedTrigger();modal.close('Close click')\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- STATE FORM --------------------------------------------------->\\r\\n<!-- -------------------------------------------------------------->\\r\\n\\r\\n<ng-template #stateModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{stateToEdit.name}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"stateLoaded\\\">\\r\\n      <h3>Edit State</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"stateName\\\"> Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"stateName\\\" [(ngModel)]=\\\"stateToEdit.name\\\" value=\\\"{{ stateToEdit.name }}\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"saveEditedState();modal.close('Close click')\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- HINT FORM --------------------------------------------------->\\r\\n<!-- -------------------------------------------------------------->\\r\\n\\r\\n<ng-template #hintModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{hintToEdit.name}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"hintLoaded\\\">\\r\\n      <h3>Edit Hint</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"hintName\\\"> Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintName\\\" [(ngModel)]=\\\"hintToEdit.name\\\" value=\\\"{{ hintToEdit.name }}\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"hintText\\\"> Hint Text </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintText\\\" [(ngModel)]=\\\"hintToEdit.hint\\\" value=\\\"{{ hintToEdit.hint }}\\\" />\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"saveEditedHint();modal.close('Close click')\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- EVENT FORM --------------------------------------------------->\\r\\n<!-- -------------------------------------------------------------->\\r\\n\\r\\n<ng-template #eventModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{eventToEdit.name}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"col-md-12\\\" *ngIf=\\\"eventLoaded\\\">\\r\\n      <h3>Edit Event</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_event_action_name\\\"> Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_event_action_name\\\" value=\\\"{{ eventToEdit.name }}\\\" [(ngModel)]=\\\"eventToEdit.name\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_event_type_event\\\"> Event Type / Event </label>\\r\\n        <select #eventTypeSelector class=\\\"selectpicker form-control\\\" id=\\\"gs_event_type_event\\\" [(ngModel)]=\\\"eventEventTypeSelect\\\">\\r\\n          <option selected=\\\"selected\\\">{{ eventToEdit.eventType }}/{{ eventToEdit.event }}</option>\\r\\n          <option>button/toggle</option>\\r\\n          <option>keypad/code</option>\\r\\n          <option>rfid/code</option>\\r\\n          <option>photoRes/rangeTrigger</option>\\r\\n          <option>thermometer/rangeTrigger</option>\\r\\n          <option>potentiometer/rangetrigger</option>\\r\\n          <option>magnetSwitch/on</option>\\r\\n          <option>magnetSwitch/off</option>\\r\\n          <option>distanceSensor/rangeTrigger</option>\\r\\n          <option>stepperDone/stepperTrigger</option>\\r\\n          <option>phoneET/callOut</option>\\r\\n          <option>phoneET/callReceived</option>\\r\\n        </select>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_device_id\\\"> Device Id </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_device_id\\\" [(ngModel)]=\\\"eventToEdit.device_id\\\" value=\\\"{{ eventToEdit.device_id }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_data\\\"> Data </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_data\\\" [(ngModel)]=\\\"eventToEdit.data\\\" value=\\\"{{ eventToEdit.data }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_description\\\"> Description </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_description\\\" [(ngModel)]=\\\"eventToEdit.description\\\" value=\\\"{{ eventToEdit.description }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_dependencies\\\"> Dependencies (Game states) </label>\\r\\n        <select class=\\\"selectpicker form-control\\\" id=\\\"gs_event_states\\\" [(ngModel)]=\\\"eventStateSelect\\\">\\r\\n          <option *ngFor=\\\"let state of scriptInstance.states\\\">{{\\r\\n            state.name\\r\\n            }}</option>\\r\\n        </select>\\r\\n        <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_dependencies\\\" value=\\\"{{ eventToEdit.dependencies }}\\\" /> -->\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"addDependencyToEvent(eventStateSelect)\\\">Add Dependency</button>\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n          <li *ngFor=\\\"let dependecy of eventToEdit.dependencies\\\" class=\\\"list-group-item\\\">\\r\\n            State: {{ dependecy }}\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteDependencyFromEvent(dependecy)\\\">\\r\\n              Delete\\r\\n            </button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_state\\\"> Game state (When triggered) </label>\\r\\n        <select class=\\\"selectpicker form-control\\\" id=\\\"gs_event_states\\\" [(ngModel)]=\\\"eventStateSelect\\\">\\r\\n          <option *ngFor=\\\"let state of scriptInstance.states\\\">{{\\r\\n            state.name\\r\\n            }}</option>\\r\\n        </select>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"addStateToCurrentEvent(eventStateSelect)\\\">Add State</button>\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n          <li *ngFor=\\\"let state of eventToEdit.states\\\" class=\\\"list-group-item\\\">\\r\\n            State: {{ state.name }}\\r\\n            <div *ngIf=\\\"state.active\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"toggleEventState(state.name)\\\"\\r\\n                data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"handle\\\"></div>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!state.active\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"toggleEventState(state.name)\\\" data-toggle=\\\"button\\\"\\r\\n                aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"handle\\\"></div>\\r\\n              </button>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteStateFromEvent(state)\\\">\\r\\n              Delete\\r\\n            </button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"gs_actions\\\"> Actions (When triggered) </label>\\r\\n        <select class=\\\"selectpicker form-control\\\" id=\\\"gs_actions\\\" [(ngModel)]=\\\"eventActionSelect\\\">\\r\\n          <option *ngFor=\\\"let action of scriptInstance.actions\\\">{{\\r\\n            action.name\\r\\n            }}</option>\\r\\n        </select>\\r\\n        <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_actions\\\" value=\\\"{{ eventToEdit.actions }}\\\" /> -->\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n          <li *ngFor=\\\"let action of eventToEdit.actions\\\" class=\\\"list-group-item\\\">\\r\\n            Action: {{ action }}\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteActionFromEvent(action)\\\">\\r\\n              Delete\\r\\n            </button>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"addActiontoEvent(eventActionSelect)\\\">Add action</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"saveEditedEvent();modal.close('Close click')\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- ACTION FORM --------------------------------------------------->\\r\\n<!-- -------------------------------------------------------------->\\r\\n<ng-template #actionModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{actionToEdit.name}} Video</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <div id=\\\"device_details\\\">when device selected list device settings</div>\\r\\n    <div class=\\\"container-fluid\\\" *ngIf=\\\"actionLoaded\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <h3>Edit Action</h3>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_event_action_name\\\"> Name </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_event_action_name\\\" [(ngModel)]=\\\"actionToEdit.name\\\" value=\\\"{{ actionToEdit.name }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_action_type_action\\\"> Action Type / Action </label>\\r\\n            <!-- {{! Make this populated from sql, or js when selecting action or event up the top}} -->\\r\\n            <select class=\\\"selectpicker form-control\\\" id=\\\"gs_action_type_action\\\" [(ngModel)]=\\\"actionActionTypeSelect\\\">\\r\\n              <option selected=\\\"selected\\\">{{ actionToEdit.actionType }}/{{\\r\\n                actionToEdit.action\\r\\n                }}</option>\\r\\n              <option>relay/start</option>\\r\\n              <option>relay/stop</option>\\r\\n              <option>relay/toggleA</option>\\r\\n              <option>mp3/play</option>\\r\\n              <option>mp3/stop</option>\\r\\n              <option>mp3/volume</option>\\r\\n              <option>buzzer/toggle</option>\\r\\n              <option>distanceSensor/configureRange</option>\\r\\n              <option>phoneAT/inCommingCall</option>\\r\\n              <option>phoneAT/outGoingCall</option>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_device_id\\\"> Device Id </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_device_id\\\" [(ngModel)]=\\\"actionToEdit.device_id\\\" value=\\\"{{ actionToEdit.device_id }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_data\\\"> Data </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_data\\\" [(ngModel)]=\\\"actionToEdit.data\\\" value=\\\"{{ actionToEdit.data }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_description\\\"> Description </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gs_description\\\" [(ngModel)]=\\\"actionToEdit.description\\\" value=\\\"{{ actionToEdit.description }}\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_dependencies\\\"> Dependencies (Game states) </label>\\r\\n            <select class=\\\"selectpicker form-control\\\" id=\\\"gs_event_states\\\" [(ngModel)]=\\\"actionStateDependencySelect\\\">\\r\\n              <option *ngFor=\\\"let state of scriptInstance.states\\\">{{\\r\\n                state.name\\r\\n                }}</option>\\r\\n            </select>\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"addDependencyToAction(actionStateDependencySelect)\\\">Add\\r\\n              Dependency</button>\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li *ngFor=\\\"let dependecy of actionToEdit.dependencies\\\" class=\\\"list-group-item\\\">\\r\\n                State: {{ dependecy }}\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteDependencyFromAction(dependecy)\\\">\\r\\n                  Delete\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_state\\\"> Game state (When triggered) </label>\\r\\n            <select class=\\\"selectpicker form-control\\\" id=\\\"gs_event_states\\\" [(ngModel)]=\\\"actionStateSelect\\\">\\r\\n              <option *ngFor=\\\"let state of scriptInstance.states\\\">{{\\r\\n                state.name\\r\\n                }}</option>\\r\\n            </select>\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"addStateToCurrentAction(actionStateSelect)\\\">Add State</button>\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li *ngFor=\\\"let state of actionToEdit.states\\\" class=\\\"list-group-item\\\">\\r\\n                State: {{ state.name }}\\r\\n                <div *ngIf=\\\"state.active\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"toggleActionState(state.name)\\\"\\r\\n                    data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"handle\\\"></div>\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!state.active\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"toggleActionState(state.name)\\\"\\r\\n                    data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n                    <div class=\\\"handle\\\"></div>\\r\\n                  </button>\\r\\n                </div>\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"scriptDeleteStateFromAction(state)\\\">\\r\\n                  Delete\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_state\\\"> Repeatable : </label>\\r\\n            {{actionToEdit.repeatable}}\\r\\n            <div *ngIf=\\\"actionToEdit.repeatable == true\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"toggleActionRepeatable()\\\" data-toggle=\\\"button\\\"\\r\\n                aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"handle\\\"></div>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"actionToEdit.repeatable == false\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"toggleActionRepeatable()\\\" data-toggle=\\\"button\\\"\\r\\n                aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n                <div class=\\\"handle\\\"></div>\\r\\n              </button>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"gs_actions\\\"> Actions (When triggered) </label>\\r\\n            <select class=\\\"selectpicker form-control\\\" id=\\\"gs_actions\\\" [(ngModel)]=\\\"actionActionSelect\\\">\\r\\n              <option *ngFor=\\\"let action of scriptInstance.actions\\\">{{\\r\\n                action.name\\r\\n                }}</option>\\r\\n            </select>\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li *ngFor=\\\"let action of actionToEdit.actions\\\" class=\\\"list-group-item\\\">\\r\\n                Action: {{ action }}\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteActionFromAction(action)\\\">\\r\\n                  Delete\\r\\n                </button>\\r\\n              </li>\\r\\n            </ul>\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"addActiontoAction(actionActionSelect)\\\">Add action</button>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"saveEditedAction();modal.close('Close click')\\\">Save</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- NEW SCRIPT MODAL ---------------------------------------------------->\\r\\n<!--  -------------------------------------------------------------------->\\r\\n<!--  -------------------------------------------------------------------->\\r\\n\\r\\n<ng-template #newScriptModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">New Script</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <h3>Script Name</h3>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Name </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintName\\\" [(ngModel)]=\\\"newScriptName\\\" placeholder=\\\"Script Name....\\\" />\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"createNewScript();modal.close('Close click')\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<!-- SCREEN CONFIG MODAL ---------------------------------------------------->\\r\\n<!--  -------------------------------------------------------------------->\\r\\n<!--  -------------------------------------------------------------------->\\r\\n<ng-template #screenConfigModal let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Screen Config -\\r\\n      {{scriptInstance.branch_address}}/{{scriptInstance.name}}/{{screenConfigToEdit.name}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <h3>Screen Config</h3>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Name </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"screenConfigName\\\" [(ngModel)]=\\\"screenConfigToEdit.name\\\" placeholder=\\\"Script Name....\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Background Type </label>\\r\\n      <select class=\\\"selectpicker form-control\\\" id=\\\"gs_action_type_action\\\" [(ngModel)]=\\\"screenConfigToEdit.backgroundType\\\">\\r\\n        <option selected=\\\"selected\\\">{{ screenConfigToEdit.backgroundType }}</option>\\r\\n        <option>Video</option>\\r\\n        <option>Image</option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Background Path </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"screenConfigName\\\" [(ngModel)]=\\\"screenConfigToEdit.backgroundPath\\\"\\r\\n        placeholder=\\\"Path to file\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Font Family</label>\\r\\n      <select class=\\\"selectpicker form-control\\\" id=\\\"gs_action_type_action\\\" [(ngModel)]=\\\"screenConfigToEdit.font\\\">\\r\\n        <option selected=\\\"selected\\\">{{ screenConfigToEdit.font }}</option>\\r\\n        <option>'Comic Sans MS', cursive, sans-serif</option>\\r\\n        <option>'Times New Roman', Times, serif</option>\\r\\n        <option>Arial, Helvetica, sans-serif</option>\\r\\n        <option>Impact, Charcoal, sans-serif</option>\\r\\n        <option>Tahoma, Geneva, sans-serif</option>\\r\\n        <option>Verdana, Geneva, sans-serif</option>\\r\\n        <option>'Courier New', Courier, monospace</option>\\r\\n        <option>'Lucida Console', Monaco, monospace</option>\\r\\n        <option>'Comic Sans MS', cursive, sans-serif</option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Font Colour</label>\\r\\n      <select class=\\\"selectpicker form-control\\\" id=\\\"gs_action_type_action\\\" [(ngModel)]=\\\"screenConfigToEdit.font_colour\\\">\\r\\n        <option selected=\\\"selected\\\">{{ screenConfigToEdit.font_colour }}</option>\\r\\n        <option>Red</option>\\r\\n        <option>DarkRed</option>\\r\\n        <option>Pink</option>\\r\\n        <option>HotPink</option>\\r\\n        <option>Green</option>\\r\\n        <option>DarkGreen</option>\\r\\n        <option>Brown</option>\\r\\n        <option>Maroon</option>\\r\\n        <option>Yellow</option>\\r\\n        <option>Khaki</option>\\r\\n        <option>Cyan</option>\\r\\n        <option>SteelBlue</option>\\r\\n        <option>White</option>\\r\\n        <option>Beige</option>\\r\\n        <option>Plum</option>\\r\\n        <option>BlueViolet</option>\\r\\n        <option>Indego</option>\\r\\n        <option>DarkSlateBlue</option>\\r\\n        <option>Purple</option>\\r\\n        <option>Blue</option>\\r\\n        <option>RoyalBlue</option>\\r\\n        <option>Navy</option>\\r\\n        <option>Silver</option>\\r\\n        <option>Gray</option>\\r\\n        <option>DimGray</option>\\r\\n        <option>Black</option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Audio path *optional </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"screenConfigName\\\" [(ngModel)]=\\\"screenConfigToEdit.audio\\\" placeholder=\\\"Audio path\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Show Timer </label>\\r\\n      <div *ngIf=\\\"screenConfigToEdit.showTimer == true\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"toggleScreenConfigShowtimer()\\\" data-toggle=\\\"button\\\"\\r\\n          aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"handle\\\"></div>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"screenConfigToEdit.showTimer == false\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"toggleScreenConfigShowtimer()\\\" data-toggle=\\\"button\\\"\\r\\n          aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"handle\\\"></div>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"hintName\\\"> Show Hints </label>\\r\\n      <div *ngIf=\\\"screenConfigToEdit.showHints == true\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle active\\\" (click)=\\\"toggleScreenConfigShowHints()\\\" data-toggle=\\\"button\\\"\\r\\n          aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"handle\\\"></div>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"screenConfigToEdit.showHints == false\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-toggle\\\" (click)=\\\"toggleScreenConfigShowHints()\\\" data-toggle=\\\"button\\\"\\r\\n          aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\">\\r\\n          <div class=\\\"handle\\\"></div>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"saveEditedScreenConfig();modal.close('Close click')\\\">\\r\\n      Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ServerService } from \"../server.service\";\r\nimport { SocketsService } from \"../sockets.service\";\r\nimport { DataService, EventActionScriptModel } from \"../data.service\";\r\nimport { InitService } from \"../init.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { RouterModule, Routes, Router, ActivatedRoute } from \"@angular/router\";\r\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { resolve } from \"path\";\r\nimport { ParsedEventType } from \"@angular/compiler\";\r\n\r\n@Component({\r\n  selector: \"app-script-editor\",\r\n  templateUrl: \"./script-editor.component.html\",\r\n  styleUrls: [\"./script-editor.component.css\"]\r\n})\r\nexport class ScriptEditorComponent implements OnInit {\r\n  scriptSubscription: Subscription;\r\n  scriptListSubscription: Subscription;\r\n  scriptInstance: any;\r\n  scriptInstanceList: any;\r\n  scriptLoaded = false;\r\n\r\n  eventLoaded: boolean;\r\n  actionLoaded: boolean;\r\n  hintLoaded: boolean;\r\n  triggerLoaded: boolean;\r\n  stateLoaded: boolean;\r\n  screenConfigLoaded: boolean;\r\n\r\n  eventToEdit: any;\r\n  actionToEdit: any;\r\n  hintToEdit: any;\r\n  triggerToEdit: any;\r\n  stateToEdit: any;\r\n  screenConfigToEdit: any;\r\n\r\n  eventStateSelect: any;\r\n  eventEventTypeSelect: any;\r\n  eventActionSelect: any;\r\n\r\n  actionActionTypeSelect: any;\r\n  actionStateSelect: any;\r\n  actionStateDependencySelect: any;\r\n  actionActionSelect: any;\r\n  actionRepeatable: any;\r\n\r\n  newScriptName: any;\r\n\r\n  @ViewChild(\"actionModal\") actionModal: any;\r\n  @ViewChild(\"eventModal\") eventModal: any;\r\n  @ViewChild(\"triggerModal\") triggerModal: any;\r\n  @ViewChild(\"stateModal\") stateModal: any;\r\n  @ViewChild(\"hintModal\") hintModal: any;\r\n  @ViewChild(\"newScriptModal\") newScriptModal: any;\r\n  @ViewChild(\"screenConfigModal\") screenConfigModal: any;\r\n\r\n  // newEventFlag: boolean;\r\n\r\n  constructor(\r\n    public dataService: DataService,\r\n    public server: ServerService,\r\n    public socket: SocketsService,\r\n    public init: InitService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.scriptListSubscribe();\r\n    this.scriptSubscribe();\r\n    this.scriptLoaded = false;\r\n    this.toggleFormPanelOff();\r\n  }\r\n\r\n  // ================================= //\r\n  // ========= Script Selection ===== //\r\n  // =============================== //\r\n  scriptListSubscribe() {\r\n    this.dataService.scriptEditor_getAllScripts();\r\n    this.scriptListSubscription = this.dataService.scriptEditor_observableScriptList.subscribe(\r\n      (scriptList: any) => {\r\n        this.scriptInstanceList = scriptList;\r\n      }\r\n    );\r\n  }\r\n  scriptSubscribe() {\r\n    this.scriptSubscription = this.dataService.scriptEditor_observableSelectedScript.subscribe(\r\n      (script: any) => {\r\n        console.log(\"selected script for editing: \", script);\r\n        this.scriptInstance = script;\r\n        this.scriptLoaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  loadScript(scriptName) {\r\n    this.dataService.scriptEditor_setSelectedScript(scriptName);\r\n  }\r\n\r\n  deleteScript(scriptName) {\r\n    console.log(\"Deleting: \", scriptName);\r\n    this.server.deleteScript(scriptName).subscribe(cb => {\r\n      console.log(cb);\r\n      this.ngOnInit();\r\n      // for(var i = 0 ; i < this.scriptInstance.length; i ++){\r\n      //   if(this.scriptInstanceList[i].name == scriptName){\r\n      //     this.scriptInstanceList.splice(i, 1);\r\n      //   }\r\n      // }\r\n    });\r\n  }\r\n\r\n  createNewScript() {\r\n    this.dataService.getNewScriptModel().then(script => {\r\n      //@ts-ignore\r\n      script.name = this.newScriptName;\r\n      this.scriptInstance = script;\r\n      this.scriptLoaded = true;\r\n      this.scriptInstanceList.push(script);\r\n    });\r\n  }\r\n\r\n  // ================================================= //\r\n  // ========= Script config functions ===== //\r\n  // ============================================== //\r\n\r\n  scriptSaveConfig() {\r\n    this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n    console.log(\"saved config\");\r\n  }\r\n\r\n  // ================================= //\r\n  // ========= Event functions ===== //\r\n  // =============================== //\r\n\r\n  scriptEditEvent(eventName) {\r\n    this.findEvent(eventName).then(evt => {\r\n      // this.newEventFlag = false;\r\n      let e: any;\r\n      e = evt;\r\n      this.eventToEdit = evt;\r\n      this.eventEventTypeSelect = `${e.eventType}/${e.event}`;\r\n      this.toggleFormPanel(\"event\");\r\n    });\r\n    console.log(\"Editing event: \", eventName);\r\n  }\r\n\r\n  scriptDeleteEvent(eventName) {\r\n    for (let i = 0; i < this.scriptInstance.events.length; i++) {\r\n      if (this.scriptInstance.events[i].name === eventName) {\r\n        this.scriptInstance.events.splice(i, 1);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n        console.log(\"Deleting: \", eventName, this.scriptInstance.events);\r\n      }\r\n    }\r\n  }\r\n\r\n  scriptDeleteStateFromEvent(state) {\r\n    const index = this.eventToEdit.states.indexOf(state);\r\n    if (index !== -1) {\r\n      this.eventToEdit.states.splice(index, 1);\r\n    }\r\n    console.log(\"Deleting: \", state);\r\n  }\r\n\r\n  // ================ Event state toggle ======//\r\n  toggleEventState(stateName) {\r\n    for (let i = 0; i < this.eventToEdit.states.length; i++) {\r\n      if (this.eventToEdit.states[i].name === stateName) {\r\n        this.eventToEdit.states[i].active = !this.eventToEdit.states[i].active;\r\n        console.log(\r\n          this.eventToEdit.states[i].name,\r\n          this.eventToEdit.states[i].active\r\n        );\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  addStateToCurrentEvent(stateName) {\r\n    console.log(this.eventStateSelect);\r\n    this.findScriptState(stateName).then(state => {\r\n      this.eventToEdit.states.push(state);\r\n    });\r\n  }\r\n\r\n  addActiontoEvent(actionName) {\r\n    this.eventToEdit.actions.push(actionName);\r\n  }\r\n\r\n  deleteActionFromEvent(actionName) {\r\n    const index = this.eventToEdit.actions.indexOf(actionName);\r\n    if (index !== -1) {\r\n      this.eventToEdit.actions.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addDependencyToEvent(depName) {\r\n    this.eventToEdit.dependencies.push(depName);\r\n  }\r\n\r\n  deleteDependencyFromEvent(depName) {\r\n    const index = this.eventToEdit.dependencies.indexOf(depName);\r\n    if (index !== -1) {\r\n      this.eventToEdit.dependencies.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  findEventState(stateName) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (let i = 0; i < this.eventToEdit.states.length; i++) {\r\n        if (this.eventToEdit.states[i].name === stateName) {\r\n          resolve(this.eventToEdit.states[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  saveEditedEvent() {\r\n    this.parseEventActionType(this.eventEventTypeSelect, \"event\").then(et => {\r\n      let e: any;\r\n      e = et;\r\n      this.eventToEdit.event = e.event;\r\n      this.eventToEdit.eventType = e.eventType;\r\n      console.log(this.eventToEdit, this.scriptInstance, \"ET: \", e);\r\n      this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n    });\r\n  }\r\n\r\n  scriptCreateNewEvent() {\r\n    this.dataService.newEventModel().then(eventModel => {\r\n      let em: any;\r\n      em = eventModel;\r\n      em.name = \"UNSET EVENT\";\r\n      this.scriptInstance.events.push(em);\r\n    });\r\n  }\r\n\r\n  // ================================= //\r\n  // ========= Action functions ===== //\r\n  // =============================== //\r\n\r\n  scriptEditAction(actionName) {\r\n    console.log(\"Editing Action: \", actionName);\r\n    this.findAction(actionName).then(act => {\r\n      let a: any;\r\n      a = act;\r\n      this.actionActionTypeSelect = `${a.actionType}/${a.action}`;\r\n      this.actionToEdit = a;\r\n      if (this.actionToEdit.repeatable != typeof Boolean) {\r\n        this.actionToEdit.repeatable = true;\r\n      }\r\n      this.toggleFormPanel(\"action\");\r\n    });\r\n  }\r\n\r\n  scriptCreateNewAction() {\r\n    this.dataService.newActionModel().then(actionModel => {\r\n      let am: any;\r\n      am = actionModel;\r\n      am.name = \"UNSET action\";\r\n      this.scriptInstance.actions.push(am);\r\n    });\r\n  }\r\n\r\n  scriptDeleteAction(actionName) {\r\n    for (let i = 0; i < this.scriptInstance.actions.length; i++) {\r\n      if (this.scriptInstance.actions[i].name === actionName) {\r\n        this.scriptInstance.actions.splice(i, 1);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n        console.log(\"Deleting: \", actionName, this.scriptInstance.actions);\r\n      }\r\n    }\r\n  }\r\n\r\n  scriptDeleteStateFromAction(state) {\r\n    const index = this.actionToEdit.states.indexOf(state);\r\n    if (index !== -1) {\r\n      this.actionToEdit.states.splice(index, 1);\r\n    }\r\n    console.log(\"Deleting: \", state.name);\r\n  }\r\n\r\n  addDependencyToAction(depName) {\r\n    this.actionToEdit.dependencies.push(depName);\r\n  }\r\n\r\n  deleteDependencyFromAction(depName) {\r\n    const index = this.actionToEdit.dependencies.indexOf(depName);\r\n    if (index !== -1) {\r\n      this.actionToEdit.dependencies.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addStateToCurrentAction(stateName) {\r\n    console.log(this.actionStateSelect);\r\n    this.findScriptState(stateName).then(state => {\r\n      this.actionToEdit.states.push(state);\r\n    });\r\n  }\r\n\r\n  toggleActionState(stateName) {\r\n    for (let i = 0; i < this.actionToEdit.states.length; i++) {\r\n      if (this.actionToEdit.states[i].name === stateName) {\r\n        this.actionToEdit.states[i].active = !this.actionToEdit.states[i]\r\n          .active;\r\n        console.log(\r\n          this.actionToEdit.states[i].name,\r\n          this.actionToEdit.states[i].active\r\n        );\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleActionRepeatable() {\r\n    this.actionToEdit.repeatable = !this.actionToEdit.repeatable;\r\n  }\r\n\r\n  addActiontoAction(actionName) {\r\n    this.actionToEdit.actions.push(actionName);\r\n  }\r\n\r\n  deleteActionFromAction(actionName) {\r\n    const index = this.actionToEdit.actions.indexOf(actionName);\r\n    if (index !== -1) {\r\n      this.actionToEdit.actions.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  saveEditedAction() {\r\n    this.parseEventActionType(this.actionActionTypeSelect, \"action\").then(\r\n      at => {\r\n        let a: any;\r\n        a = at;\r\n        this.actionToEdit.action = a.action;\r\n        this.actionToEdit.actionType = a.actionType;\r\n        console.log(this.actionToEdit, this.scriptInstance, \"AT: \", a);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n      }\r\n    );\r\n  }\r\n\r\n  // ================================= //\r\n  // ========= Hint functions ===== //\r\n  // =============================== //\r\n\r\n  scriptEditHint(hintName) {\r\n    console.log(\"Editing Hint: \", hintName);\r\n    this.findHint(hintName).then(hint => {\r\n      this.hintToEdit = hint;\r\n      this.toggleFormPanel(\"hint\");\r\n    });\r\n  }\r\n\r\n  scriptDeleteHint(hintName) {\r\n    for (let i = 0; i < this.scriptInstance.hints.length; i++) {\r\n      if (this.scriptInstance.hints[i].name === hintName) {\r\n        this.scriptInstance.hints.splice(i, 1);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n        console.log(\"Deleting: \", hintName, this.scriptInstance.hints);\r\n      }\r\n    }\r\n  }\r\n\r\n  saveEditedHint() {\r\n    this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n  }\r\n\r\n  scriptCreateNewHint() {\r\n    this.dataService.newHintModel().then(hintModel => {\r\n      let hm: any;\r\n      hm = hintModel;\r\n      hm.name = \"UNSET Hint\";\r\n      this.scriptInstance.hints.push(hm);\r\n    });\r\n  }\r\n\r\n  // ================================= //\r\n  // ========= States functions ===== //\r\n  // =============================== //\r\n\r\n  saveEditedState() {\r\n    this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n  }\r\n\r\n  scriptEditState(stateName) {\r\n    console.log(\"Editing State: \", stateName);\r\n    this.findState(stateName).then(state => {\r\n      this.stateToEdit = state;\r\n      this.toggleFormPanel(\"state\");\r\n    });\r\n  }\r\n\r\n  scriptDeleteState(stateName) {\r\n    for (let i = 0; i < this.scriptInstance.states.length; i++) {\r\n      if (this.scriptInstance.states[i].name === stateName) {\r\n        this.scriptInstance.states.splice(i, 1);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n        console.log(\"Deleting: \", stateName, this.scriptInstance.states);\r\n      }\r\n    }\r\n  }\r\n\r\n  scriptCreateNewState() {\r\n    this.dataService.newStateModel().then(stateModel => {\r\n      let sm: any;\r\n      sm = stateModel;\r\n      sm.name = \"UNSET State\";\r\n      this.scriptInstance.states.push(sm);\r\n    });\r\n  }\r\n\r\n  // ================================= //\r\n  // ========= Triggers functions ===== //\r\n  // =============================== //\r\n\r\n  scriptEditTrigger(triggerName) {\r\n    console.log(\"Editing Trigger: \", triggerName);\r\n    this.findTrigger(triggerName).then(trg => {\r\n      this.triggerToEdit = trg;\r\n      this.toggleFormPanel(\"trigger\");\r\n    });\r\n  }\r\n\r\n  scriptDeleteTrigger(triggerName) {\r\n    for (let i = 0; i < this.scriptInstance.triggers.length; i++) {\r\n      if (this.scriptInstance.triggers[i].name === triggerName) {\r\n        this.scriptInstance.triggers.splice(i, 1);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n        console.log(\"Deleting: \", triggerName, this.scriptInstance.triggers);\r\n      }\r\n    }\r\n  }\r\n\r\n  saveEditedTrigger() {\r\n    this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n  }\r\n\r\n  scriptCreateNewTrigger() {\r\n    this.dataService.newTriggerModel().then(triggerModel => {\r\n      let tm: any;\r\n      tm = triggerModel;\r\n      tm.name = \"UNSET Trigger\";\r\n      this.scriptInstance.triggers.push(tm);\r\n    });\r\n  }\r\n\r\n  triggerToggleLoopAudio() {\r\n    this.triggerToEdit.loop_audio = !this.triggerToEdit.loop_audio;\r\n  }\r\n\r\n  triggerToggleLoopVideo() {\r\n    this.triggerToEdit.loop_video = !this.triggerToEdit.loop_video;\r\n  }\r\n\r\n  triggerTogglePauseTimer() {\r\n    this.triggerToEdit.pause_timer = !this.triggerToEdit.pause_timer;\r\n  }\r\n\r\n  triggerToggleRepeatable() {\r\n    this.triggerToEdit.can_toggle = !this.triggerToEdit.can_toggle;\r\n  }\r\n\r\n  // ======================================= //\r\n  // ========= Screen config functions ===== //\r\n  // ======================================= //\r\n  scriptEditScreenConfig(screenConfigName) {\r\n    console.log(\"Editing Screen Config: \", screenConfigName);\r\n    this.findScreenConfig(screenConfigName).then(conf => {\r\n      this.screenConfigToEdit = conf;\r\n      this.toggleFormPanel(\"screenConfig\");\r\n    });\r\n  }\r\n\r\n  scriptDeleteScreenConfig(screenConfig) {\r\n    for (let i = 0; i < this.scriptInstance.screenConfigs.length; i++) {\r\n      if (this.scriptInstance.screenConfigs[i].name === screenConfig) {\r\n        this.scriptInstance.screenConfigs.splice(i, 1);\r\n        this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n        console.log(\r\n          \"Deleting: \",\r\n          screenConfig,\r\n          this.scriptInstance.screenConfigs\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  saveEditedScreenConfig() {\r\n    this.dataService.scriptEditor_updateSelectedScript(this.scriptInstance);\r\n    //update game screen config too\r\n    this.server\r\n      .updateScreenConfiguration(\r\n        this.scriptInstance.name,\r\n        this.screenConfigToEdit\r\n      )\r\n      .subscribe(result => {\r\n        console.log(result);\r\n      });\r\n  }\r\n\r\n  scriptCreateNewScreenConfig() {\r\n    this.dataService.newScreenConfigModel().then(screenConfigModel => {\r\n      let sc: any;\r\n      sc = screenConfigModel;\r\n      sc.name = \"UNSET ScreenConfig\";\r\n      this.scriptInstance.ScreenConfigs.push(sc);\r\n    });\r\n  }\r\n\r\n  toggleScreenConfigShowtimer() {\r\n    this.screenConfigToEdit.showTimer = !this.screenConfigToEdit.showTimer;\r\n  }\r\n\r\n  toggleScreenConfigShowHints() {\r\n    this.screenConfigToEdit.showHints = !this.screenConfigToEdit.showHints;\r\n  }\r\n\r\n  // ================ helpers =============//\r\n\r\n  findScriptState(stateName) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (let i = 0; i < this.scriptInstance.states.length; i++) {\r\n        if (this.scriptInstance.states[i].name === stateName) {\r\n          resolve(this.scriptInstance.states[i]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  parseEventActionType(input, type) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      const split = input.split(\"/\");\r\n      let result = {};\r\n      if (type === \"event\") {\r\n        result = {\r\n          eventType: split[0],\r\n          event: split[1]\r\n        };\r\n      } else {\r\n        result = {\r\n          actionType: split[0],\r\n          action: split[1]\r\n        };\r\n      }\r\n      resolve(result);\r\n    });\r\n  }\r\n\r\n  toggleFormPanel(panelType) {\r\n    this.toggleFormPanelOff();\r\n    switch (panelType) {\r\n      case \"event\":\r\n        this.eventLoaded = true;\r\n        this.showEventsModal();\r\n        break;\r\n      case \"action\":\r\n        this.actionLoaded = true;\r\n        this.showActionsModal();\r\n        break;\r\n      case \"trigger\":\r\n        this.triggerLoaded = true;\r\n        this.showTriggersModal();\r\n        break;\r\n      case \"hint\":\r\n        this.hintLoaded = true;\r\n        this.showHintsModal();\r\n        break;\r\n      case \"state\":\r\n        this.stateLoaded = true;\r\n        this.showStatesModal();\r\n        break;\r\n      case \"screenConfig\":\r\n        this.screenConfigLoaded = true;\r\n        this.showScreenConfigModal();\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  toggleFormPanelOff() {\r\n    this.eventLoaded = false;\r\n    this.actionLoaded = false;\r\n    this.hintLoaded = false;\r\n    this.triggerLoaded = false;\r\n    this.stateLoaded = false;\r\n  }\r\n  findEvent(name) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (const evt of this.scriptInstance.events) {\r\n        if (evt.name === name) {\r\n          resolve(evt);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  findAction(name) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (const act of this.scriptInstance.actions) {\r\n        if (act.name === name) {\r\n          resolve(act);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  findHint(name) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (const hint of this.scriptInstance.hints) {\r\n        if (hint.name === name) {\r\n          resolve(hint);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  findState(name) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (const state of this.scriptInstance.states) {\r\n        if (state.name === name) {\r\n          resolve(state);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  findTrigger(name) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    return new Promise((resolve, reject) => {\r\n      for (const trg of this.scriptInstance.triggers) {\r\n        if (trg.name === name) {\r\n          resolve(trg);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  findScreenConfig(name) {\r\n    return new Promise((resolve, reject) => {\r\n      for (const conf of this.scriptInstance.screenConfigs) {\r\n        if (conf.name === name) {\r\n          resolve(conf);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // ========== MODALS ============//\r\n  showActionsModal() {\r\n    this.modalService.open(this.actionModal, { size: \"lg\" });\r\n  }\r\n\r\n  showEventsModal() {\r\n    this.modalService.open(this.eventModal, { size: \"lg\" });\r\n  }\r\n  showStatesModal() {\r\n    this.modalService.open(this.stateModal, { size: \"lg\" });\r\n  }\r\n  showHintsModal() {\r\n    this.modalService.open(this.hintModal, { size: \"lg\" });\r\n  }\r\n\r\n  showTriggersModal() {\r\n    this.modalService.open(this.triggerModal, { size: \"lg\" });\r\n  }\r\n\r\n  showNewScriptNameModal() {\r\n    this.modalService.open(this.newScriptModal, { size: \"lg\" });\r\n    this.newScriptName = \"\";\r\n  }\r\n\r\n  showScreenConfigModal() {\r\n    this.modalService.open(this.screenConfigModal, { size: \"lg\" });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { ConfigService } from \"./config.service\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ServerService {\r\n  public api = `http://192.168.0.180:4300`;\r\n  public scriptInstances: any;\r\n  public selectedScript: any;\r\n  public selectedScriptInstance: any;\r\n  public observableScript: any;\r\n\r\n  constructor(private http: HttpClient, public config: ConfigService) {\r\n    // Seleceted will throw errors otherwise... TODO: put elsewhere\r\n    this.selectedScript = {\r\n      name: \"Select a script\",\r\n      timeUpdate: { hrs: 0, min: 0, sec: 0 }\r\n    };\r\n    this.observableScript = new BehaviorSubject<any>(this.selectedScript);\r\n    this.scriptInstances = [];\r\n    this.api = config.getApiUrl();\r\n  }\r\n\r\n  scriptChange() {\r\n    this.observableScript.next(this.selectedScript);\r\n  }\r\n\r\n  setSelectedScript(script) {\r\n    this.selectedScript = script;\r\n    this.scriptChange();\r\n  }\r\n\r\n  // Script CRUD\r\n  createScript(script): Observable<any> {\r\n    return this.http.post(`${this.api}/script`, script);\r\n  }\r\n\r\n  loadScript(name): Observable<any> {\r\n    this.http.get(`${this.api}/game/${name}`).subscribe(scriptInstance => {\r\n      this.selectedScriptInstance = scriptInstance;\r\n      console.log(scriptInstance);\r\n    });\r\n    return this.http.get(`${this.api}/script/${name}`);\r\n  }\r\n  loadScripts(): Observable<any> {\r\n    this.http.get(`${this.api}/game`).subscribe(scriptInstances => {\r\n      this.scriptInstances = scriptInstances;\r\n    });\r\n    return this.http.get(`${this.api}/script`);\r\n  }\r\n\r\n  updateScript(script): Observable<any> {\r\n    return this.http.put(`${this.api}/script`, script);\r\n  }\r\n\r\n  deleteScript(script): Observable<any> {\r\n    return this.http.delete(`${this.api}/script/${script}`);\r\n  }\r\n\r\n  getFreshScriptsForEditing(): Observable<any> {\r\n    return this.http.get(`${this.api}/scriptf`);\r\n  }\r\n\r\n  // ==========================================//\r\n  // ======== Branches =======================//\r\n  // =========================================//\r\n\r\n  createBranch(branch: any): Observable<any> {\r\n    return this.http.post(`${this.api}/branch`, branch);\r\n  }\r\n\r\n  readBranch(id): Observable<any> {\r\n    console.log(\"Server reading branch\", id);\r\n    return this.http.get(`${this.api}/branch/${id}`);\r\n  }\r\n\r\n  readAllBranches(): Observable<any> {\r\n    console.log(\"Server reading branches\");\r\n    return this.http.get(`${this.api}/branch`);\r\n  }\r\n\r\n  updateBranch(branch): Observable<any> {\r\n    return this.http.put(`${this.api}/branch`, branch);\r\n  }\r\n\r\n  deleteBranch(id): Observable<any> {\r\n    return this.http.delete(`${this.api}/branch/${id}`);\r\n  }\r\n\r\n  branchDeleteMedia(msg): Observable<any> {\r\n    return this.http.post(`${this.api}/branch/media/delete`, msg);\r\n  }\r\n\r\n  branchUploadVideo(msg: FormData): Observable<any> {\r\n    return this.http.post(`${this.api}/branch/video`, msg);\r\n  }\r\n  branchUploadAudio(msg): Observable<any> {\r\n    return this.http.post(`${this.api}/branch/audio`, msg);\r\n  }\r\n  // ==========================================//\r\n  // ======== Nodes =======================//\r\n  // =========================================//\r\n\r\n  getBridgeNodes(branchId): Observable<any> {\r\n    return this.http.get(`${this.api}/branch/nodes/${branchId}`);\r\n  }\r\n\r\n  editNodeCommonId(msg): Observable<any> {\r\n    return this.http.post(`${this.api}/branch/nodes/direct`, msg);\r\n  }\r\n\r\n  editNodeType(msg): Observable<any> {\r\n    return this.http.post(`${this.api}/branch/nodes/direct`, msg);\r\n  }\r\n\r\n  sendNodeAction(msg): Observable<any> {\r\n    return this.http.post(`${this.api}/branch/nodes/direct`, msg);\r\n  }\r\n\r\n  // ==========================================//\r\n  // ======== Overview =======================//\r\n  // =========================================//\r\n  loadOverview(scriptName): Observable<any> {\r\n    return this.http.get(`${this.api}/getOverview/${scriptName}`);\r\n  }\r\n\r\n  sendForcedAction(scriptName, actionName): Observable<any> {\r\n    const msg = {\r\n      name: scriptName,\r\n      forceAction: actionName\r\n    };\r\n    console.log(msg);\r\n    // return this.http.post(`${this.api}/force/action`, msg);\r\n    return this.http.post(`${this.api}/game/force/action`, msg);\r\n  }\r\n\r\n  sendForcedEvent(scriptName, eventName, completedTime): Observable<any> {\r\n    const msg = {\r\n      name: scriptName,\r\n      forceEvent: eventName,\r\n      completedTime: completedTime\r\n    };\r\n    console.log(msg);\r\n    // return this.http.post(`${this.api}/force/event`, msg);\r\n    return this.http.post(`${this.api}/game/force/event`, msg);\r\n  }\r\n\r\n  startCustomTime(scriptName: any, h: any, m: any, s: any): Observable<any> {\r\n    const msg = {\r\n      name: scriptName,\r\n      time: { hours: h, minutes: m, seconds: s }\r\n    };\r\n    return this.http.put(`${this.api}/game/time`, msg);\r\n  }\r\n\r\n  updateCustomTime(scriptName: any, h: any, m: any, s: any): Observable<any> {\r\n    const msg = {\r\n      name: scriptName,\r\n      update: \"true\",\r\n      time: { hours: h, minutes: m, seconds: s }\r\n    };\r\n    return this.http.put(`${this.api}/game/time`, msg);\r\n  }\r\n\r\n  startNewGame(scriptName: any, h: any, m: any, s: any): Observable<any> {\r\n    const msg = {\r\n      name: scriptName,\r\n      timeLimit: {\r\n        hours: h,\r\n        minutes: m,\r\n        seconds: s\r\n      }\r\n    };\r\n    console.log(msg);\r\n    return this.http.post(`${this.api}/game`, msg);\r\n  }\r\n\r\n  pauseGameTimer(scriptName: any): Observable<any> {\r\n    return this.http.get(`${this.api}/game/time/pause/${scriptName}`);\r\n  }\r\n\r\n  resumeGameTimer(scriptName: any): Observable<any> {\r\n    return this.http.get(`${this.api}/game/time/resume/${scriptName}`);\r\n  }\r\n\r\n  endGame(scriptName: any): Observable<any> {\r\n    return this.http.delete(`${this.api}/game/${scriptName}`);\r\n  }\r\n\r\n  updateLocalScripts(instanceUpdate: any) {\r\n    let exist = false;\r\n    this.scriptInstances.forEach(script => {\r\n      if (script.name === instanceUpdate.name) {\r\n        script = instanceUpdate;\r\n\r\n        if (this.selectedScript.name === instanceUpdate.name) {\r\n          this.selectedScript.timeUpdate = instanceUpdate.timeUpdate;\r\n        }\r\n\r\n        exist = true;\r\n      }\r\n    });\r\n    if (!exist) {\r\n      this.scriptInstances.push(instanceUpdate);\r\n    }\r\n  }\r\n\r\n  updateScreenConfiguration(scriptName, config): Observable<any> {\r\n    let msg = {\r\n      config: config,\r\n      scriptName: scriptName,\r\n      screenName: config.name\r\n    };\r\n    return this.http.post(`${this.api}/branch/config`, msg);\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================== TRIGGERS  ================================== //\r\n  // ======================================================================= //\r\n  triggerForceTrigger(msg): Observable<any> {\r\n    console.log(\"Forcing trigger: \", msg);\r\n\r\n    return this.http.post(`${this.api}/branch/trigger`, msg);\r\n  }\r\n\r\n  triggerPlayAudio(msg): Observable<any> {\r\n    console.log(\"Playing: \", msg);\r\n\r\n    return this.http.post(`${this.api}/branch/trigger/audio`, msg);\r\n  }\r\n\r\n  triggerPlayVideo(msg): Observable<any> {\r\n    console.log(\"Playing: \", msg);\r\n\r\n    return this.http.post(`${this.api}/branch/trigger/video`, msg);\r\n  }\r\n\r\n  triggerSendHttpRequest(msg): Observable<any> {\r\n    return this.http.post(`${this.api}/trigger/request`, msg);\r\n  }\r\n\r\n  // ======================================================================= //\r\n  // ========================== HINTS  ===================================== //\r\n  // ======================================================================= //\r\n\r\n  hintSendHint(msg): Observable<any> {\r\n    console.log(\"SendingHint: \", msg);\r\n\r\n    return this.http.post(`${this.api}/branch/hint`, msg);\r\n  }\r\n\r\n  hintSendCustomHint(msg): Observable<any> {\r\n    console.log(msg);\r\n    return this.http.post(`${this.api}/branch/hint`, msg);\r\n  }\r\n\r\n  clearHint(msg): Observable<any> {\r\n    console.log(msg);\r\n    return this.http.post(`${this.api}/branch/hint/clear`, msg);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div id=\\\"instance_list\\\">\\r\\n        <h3>Branches</h3>\\r\\n        <div class=\\\"card\\\" style=\\\"width: 100%;\\\">\\r\\n          <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li *ngFor=\\\"let branch of branchList\\\" class=\\\"list-group-item\\\">\\r\\n              <h4>{{ branch?.name }}</h4>\\r\\n              <ul class=\\\"list-group list-group-flush\\\">\\r\\n                <li>ID: {{ branch?.id }}</li>\\r\\n                <li>IP ADDRESS: {{ branch?.ip_address }}</li>\\r\\n              </ul>\\r\\n              <br />\\r\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"loadBranch(branch.id)\\\">\\r\\n                Edit\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteBranch(branch.id)\\\">\\r\\n                Delete\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-outline-info\\\" (click)=\\\"configBranch(branch.id)\\\">\\r\\n                Config\\r\\n              </button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"showNewBranchNameModal()\\\">\\r\\n          Add new Branch\\r\\n        </button>\\r\\n        <br />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <div>\\r\\n\\r\\n\\r\\n        <!-- BRANCH INFO -->\\r\\n\\r\\n\\r\\n        <div class=\\\"card\\\" *ngIf=\\\"selectedBranch?.name != undefined\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h2>{{selectedBranch?.name}}</h2>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">Branch ID: </h5>\\r\\n            <p class=\\\"card-text\\\">{{selectedBranch?.id}}</p>\\r\\n            <h5 class=\\\"card-title\\\">IP Address : </h5>\\r\\n            <p class=\\\"card-text\\\">{{selectedBranch?.ip_address}}</p>\\r\\n            <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a> -->\\r\\n            <hr />\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Video</h5>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                      <li class=\\\"list-group-item\\\" *ngFor=\\\"let video of selectedBranch.config.media?.video\\\">\\r\\n                        <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"branchDeleteVideo(video)\\\">Delete</button>\\r\\n                        {{video}}\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\" id=\\\"inputGroupFileAddon01\\\">Upload</span>\\r\\n                      </div>\\r\\n                      <div class=\\\"custom-file\\\">\\r\\n                        <input id='update_image' class=\\\"custom-file-input\\\" (change)='onFileSelected($event);setMediaType(\\\"video\\\")'\\r\\n                          type=\\\"file\\\" name='file'>\\r\\n                        <!-- <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\" aria-describedby=\\\"inputGroupFileAddon01\\\"> -->\\r\\n                        <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Select Video</label>\\r\\n                      </div>\\r\\n                      <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"setMediaType('video');updateMedia()\\\">Upload</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title\\\">Audio</h5>\\r\\n                    <ul class=\\\"list-group list-group-flush\\\">\\r\\n                      <li class=\\\"list-group-item\\\" *ngFor=\\\"let audio of selectedBranch.config.media?.audio\\\">\\r\\n                        <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"branchDeleteAudio(audio)\\\">Delete</button>\\r\\n                        {{audio}}\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                      <div class=\\\"input-group-prepend\\\">\\r\\n                        <span class=\\\"input-group-text\\\" id=\\\"inputGroupFileAddon01\\\">Upload</span>\\r\\n                      </div>\\r\\n                      <div class=\\\"custom-file\\\">\\r\\n                        <!-- <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile01\\\" aria-describedby=\\\"inputGroupFileAddon01\\\"> -->\\r\\n                        <input id='update_image' class=\\\"custom-file-input\\\" (change)='onFileSelected($event);setMediaType(\\\"audio\\\")'\\r\\n                          type=\\\"file\\\" name='file'>\\r\\n                        <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile01\\\">Choose file</label>\\r\\n                      </div>\\r\\n                      <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"setMediaType('audio');updateMedia()\\\">Upload</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <hr />\\r\\n\\r\\n\\r\\n\\r\\n        <!-- BRANCH NODE MESHES -->\\r\\n        <div *ngFor=\\\"let node of selectedBranch?.nodes\\\">\\r\\n          <ul class=\\\"list-group list-group-flush\\\">\\r\\n            <li class=\\\"list-group-item\\\">Bridge ID: {{ node?.id }}</li>\\r\\n\\r\\n            <li class=\\\"list-group-item\\\">\\r\\n              <div class=\\\"input-group input-group-sm\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">Branch Address :</span>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"branch_address\\\" value=\\\"{{ node.ipAddress }}\\\" />\\r\\n              </div>\\r\\n              <!-- IP ADDRESS: {{node?.ipAddress}} -->\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"list-group-item\\\">\\r\\n              <div class=\\\"input-group input-group-sm\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\">Bridge Type :</span>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"branch_address\\\" value=\\\"{{ node?.nodeType }}\\\" />\\r\\n              </div>\\r\\n\\r\\n              <!-- Bridge Type: {{node?.nodeType}} -->\\r\\n            </li>\\r\\n          </ul>\\r\\n          <h4>Mesh Nodes:</h4>\\r\\n          <div *ngFor=\\\"let mNode of selectedBranchMeshNodes\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <ul class=\\\"list-group list-group-flush\\\">\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <h5>Hardware Id:</h5>\\r\\n                  {{ mNode?.hardwareId }}\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <h5>Common Id:</h5>\\r\\n                  {{ mNode?.id }}\\r\\n\\r\\n\\r\\n\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <div class=\\\"input-group input-group-sm\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\">Node Id</span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mNodeId_{{mNode.id}}\\\" value=\\\"{{ mNode.id }}\\\" />\\r\\n                  </div>\\r\\n                  <button class=\\\"btn btn-sm-success\\\" (click)=\\\"editNodeId(node.id, node.nodeType, mNode.id)\\\">Change</button>\\r\\n                  <!-- IP ADDRESS: {{node?.ipAddress}} -->\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <h5>Node Type:</h5>\\r\\n                  {{ mNode?.type }}\\r\\n\\r\\n                  <select class=\\\"selectpicker form-control\\\" id=\\\"mNodeSelectType_{{mNode.id}}\\\">\\r\\n                    <option selected=\\\"selected\\\">{{ mNode?.type }}</option>\\r\\n                    <option *ngFor=\\\"let type of nodeTypes\\\">{{type}}</option>\\r\\n                  </select>\\r\\n                  <button class=\\\"btn btn-sm-success\\\" (click)=\\\"editNodeType(node.id, node.nodeType, mNode.id)\\\">Change</button>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <h5>Last Updated:</h5>\\r\\n                  {{ mNode?.lastUpdated | date: \\\"medium\\\" }}\\r\\n                </li>\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <h5>Free Memory:</h5>\\r\\n                  {{ mNode?.memory }}\\r\\n                </li>\\r\\n\\r\\n                <li class=\\\"list-group-item\\\">\\r\\n                  <h3>Send Action</h3>\\r\\n\\r\\n                  <!-- Relay controls -->\\r\\n                  <div *ngIf=\\\"mNode.type == 'relay'\\\">\\r\\n                    <div *ngFor=\\\"let action of actionRelayActions\\\">\\r\\n                      <button *ngFor=\\\"let data of actionRelayData\\\" (click)=\\\"sendActionToNode(node.id, node.nodeType, mNode.id, action, 'relay', data)\\\">{{action}}\\r\\n                        {{data}}</button>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n            <hr />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #newBranchModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">New Script</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <h3>Branch Name</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"hintName\\\"> Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintName\\\" [(ngModel)]=\\\"newBranchName\\\" placeholder=\\\"Branch Name....\\\" />\\r\\n      </div>\\r\\n\\r\\n      <h3>Branch IP Address</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"hintName\\\"> IP Address </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintName\\\" [(ngModel)]=\\\"newBranchIp\\\" placeholder=\\\"E.g. http://192.168.0.10:4300\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"createNewBranch(); modal.close('Close click')\\\">\\r\\n        Save\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">\\r\\n        Close\\r\\n      </button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template #branchConfigModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">{{ selectedBranch?.name }}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text\\\">Branch Name :</span>\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintName\\\" [(ngModel)]=\\\"selectedBranch.name\\\" placeholder=\\\"Branch Name....\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text\\\">Branch IP Address :</span>\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"branch_address\\\" [(ngModel)]=\\\"selectedBranch.ip_address\\\" value=\\\"{{ selectedBranch.ipAddress }}\\\" />\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text\\\">Root Server IP :</span>\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"hintName\\\" [(ngModel)]=\\\"selectedBranch.config.server_url\\\"\\r\\n          placeholder=\\\"E.g. http://192.168.0.10:4300\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"updateBRanchConfig(); modal.close('Close click')\\\">\\r\\n        Save\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modal.close('Close click')\\\">\\r\\n        Close\\r\\n      </button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DataService } from \"../data.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { NgbModal, ModalDismissReasons } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {\r\n  FormsModule,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators\r\n} from \"@angular/forms\";\r\nimport * as $ from \"jquery\";\r\nimport { load } from \"@angular/core/src/render3\";\r\n\r\n@Component({\r\n  selector: \"app-settings\",\r\n  templateUrl: \"./settings.component.html\",\r\n  styleUrls: [\"./settings.component.css\"]\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  branchSubscription: Subscription;\r\n  branchListSubscription: Subscription;\r\n  selectedBranch: any;\r\n  branchList: any;\r\n  branchLoaded: boolean;\r\n\r\n  // Editing nodes\r\n  nodeTypes = [\r\n    \"relay\",\r\n    \"bridge\",\r\n    \"button\",\r\n    \"keypad\",\r\n    \"magSwitch\",\r\n    \"rfid\",\r\n    \"mp3\"\r\n  ];\r\n  tempNodeType: any;\r\n\r\n  tempAction: any;\r\n  tempActionType: any;\r\n  tempActionData: any;\r\n\r\n  // New Branch\r\n  @ViewChild(\"newBranchModal\") newBranchModal: any;\r\n  newBranchName: any;\r\n  newBranchIp: any;\r\n\r\n  //Selected branch\r\n  @ViewChild(\"branchConfigModal\") branchConfigModal: any;\r\n  selectedBridgeToEdit: any;\r\n  selectedBranchMeshNodes = [];\r\n  meshNodeToEdit: any;\r\n\r\n  // Action packets\r\n  actionRelayData = [15, 2, 4, 5, 27, 14, 12, 13];\r\n  actionRelayActions = [\"start\", \"stop\", \"toggleA\"];\r\n  actionRelayActionType = \"relay\";\r\n\r\n  // Branch Media\r\n  selectedFile: any;\r\n  selectedFilePath: any;\r\n  mediaType: any;\r\n\r\n  constructor(\r\n    public dataService: DataService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.branchListSubscribe();\r\n    this.branchSubscribe();\r\n    this.branchLoaded = false;\r\n  }\r\n\r\n  onFileSelected(event) {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    this.selectedFile = event.target.files[0];\r\n    this.selectedFilePath = event.target.files[0].path;\r\n  }\r\n\r\n  updateMedia() {\r\n    // event.preventDefault();\r\n    this.prepareForm().then(fd => {\r\n      if (this.mediaType == \"video\") {\r\n        this.dataService.branch_uploadVideo(fd);\r\n      } else if (this.mediaType == \"audio\") {\r\n        this.dataService.branch_uploadAudio(fd);\r\n      }\r\n      this.mediaType = \"none\";\r\n    });\r\n  }\r\n\r\n  prepareForm() {\r\n    return new Promise((resolve, reject) => {\r\n      let fd: FormData = new FormData();\r\n      fd.append(\"file\", this.selectedFile, this.selectedFile.name);\r\n      fd.append(\"branchIp\", this.selectedBranch.ip_address);\r\n      console.log(this.selectedFile, this.selectedFile.name);\r\n      resolve(fd);\r\n    });\r\n  }\r\n\r\n  setMediaType(type) {\r\n    this.mediaType = type;\r\n  }\r\n\r\n  branchListSubscribe() {\r\n    this.dataService.branch_serverGetAllBranches();\r\n    this.branchListSubscription = this.dataService.branch_observableBranchList.subscribe(\r\n      branchList => {\r\n        console.log(branchList);\r\n        this.branchList = branchList;\r\n        if (branchList === undefined) {\r\n          return;\r\n        }\r\n      }\r\n    );\r\n  }\r\n  branchSubscribe() {\r\n    this.branchSubscription = this.dataService.branch_observableSelectedBranch.subscribe(\r\n      branch => {\r\n        if (branch != undefined) {\r\n          console.log(\"GOT BRANCH\");\r\n          if (branch.nodes != undefined) {\r\n            console.log(\"GOT NODE\");\r\n            for (let i = 0; i < branch.nodes.length; i++) {\r\n              let node = branch.nodes[i];\r\n              this.makeArr(node.meshNodes).then(arr => {});\r\n            }\r\n          }\r\n        }\r\n        this.selectedBranch = branch;\r\n        console.log(\"selected branch for editing: \", branch);\r\n        this.branchLoaded = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  makeArr(meshNodes) {\r\n    return new Promise((resolve, reject) => {\r\n      this.selectedBranchMeshNodes = [];\r\n      var nodes = [];\r\n      for (var x in meshNodes) {\r\n        console.log(\"pushing\", x);\r\n        this.selectedBranchMeshNodes.push(meshNodes[x]);\r\n        nodes.push(meshNodes[x]);\r\n      }\r\n      resolve(nodes);\r\n    });\r\n  }\r\n\r\n  loadBranch(id) {\r\n    this.dataService.branch_setSelectedBranch(id);\r\n    this.dataService.branch_getAllBranchNodes(id);\r\n    // this is now read as selectedBranch\r\n    this.branchLoaded = true;\r\n  }\r\n\r\n  deleteBranch(id) {\r\n    this.dataService.branch_deleteBranch(id);\r\n  }\r\n\r\n  configBranch(id) {\r\n    this.loadBranch(id);\r\n    this.modalService.open(this.branchConfigModal, { size: \"lg\" });\r\n  }\r\n\r\n  updateBRanchConfig() {\r\n    this.dataService.branch_updateSelectedBranch(this.selectedBranch);\r\n  }\r\n\r\n  showNewBranchNameModal() {\r\n    this.modalService.open(this.newBranchModal, { size: \"lg\" });\r\n    this.newBranchName = \"\";\r\n    this.newBranchIp = \"\";\r\n  }\r\n\r\n  createNewBranch() {\r\n    this.dataService.branch_createNewBranch(\r\n      this.newBranchName,\r\n      this.newBranchIp\r\n    );\r\n    this.dataService.branch_serverGetAllBranches();\r\n  }\r\n\r\n  branchDeleteVideo(name) {\r\n    this.dataService.branch_deleteVideo(name, this.selectedBranch.ip_address);\r\n  }\r\n\r\n  branchDeleteAudio(name) {\r\n    this.dataService.branch_deleteAudio(name, this.selectedBranch.ipaddress);\r\n  }\r\n\r\n  // =============================\r\n  // ===== QUERY NODE FUNCTIONS ==\r\n  // =============================\r\n  getNodeSubconnections(bridgeId) {}\r\n\r\n  getNodeNodeList(bridgeId) {\r\n    //type = getMeshNodes\r\n  }\r\n\r\n  // =============================\r\n  // ====== EDIT NODE FUNCTIONS ==\r\n  // =============================\r\n  editNodeBranchAddress(bridgeId, ipaddress) {\r\n    //ip address as int array i.e. [192,168,0,10]\r\n  }\r\n\r\n  editNodeId(bridgeId, bridgeType, nodeId) {\r\n    // let newId = $(`#mNodeId_${nodeId}`).val();\r\n    this.getElemValue(`#mNodeId_${nodeId}`).then(newId => {\r\n      let node = {\r\n        branchAddress: this.selectedBranch.ip_address,\r\n        bridgeId: bridgeId,\r\n        bridgeType: bridgeType,\r\n        nodeId: nodeId,\r\n        newId: newId\r\n      };\r\n      console.log(node);\r\n      this.dataService.branch_editNodeCommonId(node);\r\n    });\r\n  }\r\n\r\n  editNodeType(bridgeId, bridgeType, nodeId) {\r\n    let newType = $(`#mNodeSelectType_${nodeId} option:selected`).text();\r\n    let node = {\r\n      branchAddress: this.selectedBranch.ip_address,\r\n      bridgeId: bridgeId,\r\n      bridgeType: bridgeType,\r\n      nodeId: nodeId,\r\n      newType: newType\r\n    };\r\n    this.dataService.branch_editNodeType(node);\r\n  }\r\n\r\n  getElemValue(elemId) {\r\n    return new Promise((resolve, reject) => {\r\n      let result = $(elemId).val();\r\n      resolve(result);\r\n      // while (result == \"\" || result == undefined) {\r\n      //   result = $(elemId).val();\r\n      //   if (result != \"\" && result != undefined) {\r\n      //     resolve(result);\r\n      //     return;\r\n      //   }\r\n      // }\r\n    });\r\n  }\r\n\r\n  sendActionToNode(bridgeId, bridgeType, nodeId, action, actionType, data) {\r\n    let node = {\r\n      branchAddress: this.selectedBranch.ip_address,\r\n      bridgeId: bridgeId,\r\n      bridgeType: bridgeType,\r\n      nodeId: nodeId,\r\n      action: action,\r\n      actionType: actionType,\r\n      data: data\r\n    };\r\n    this.dataService.branch_sendNodeAction(node);\r\n  }\r\n\r\n  getMeshNodeToEdit(hardwareId, cb) {\r\n    for (let i = 0; i < this.selectedBranchMeshNodes.length; i++) {\r\n      const node = this.selectedBranchMeshNodes[i];\r\n      if (node.hardwareId === hardwareId) {\r\n        cb(node);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport * as io from \"socket.io-client\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { ConfigService } from \"./config.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class SocketsService {\r\n  private url = \"192.168.0.180:4300\"; //Also loads from config\r\n  private socket;\r\n\r\n  constructor(public config: ConfigService) {\r\n    this.socket = io(this.url);\r\n    this.url = this.config.getApiUrl();\r\n  }\r\n\r\n  /** Send a message over sockets */\r\n  // sendMessage(channel_id, message, user, user_id, image = \"\") {\r\n  //   console.log(\"MEssage sending :\", message);\r\n  //   const msg = {\r\n  //     message: message,\r\n  //     user: user,\r\n  //     user_id: user_id,\r\n  //     image: image\r\n  //   };\r\n  //   this.socket.emit(\"message\", {\r\n  //     room: channel_id,\r\n  //     message: msg\r\n  //   });\r\n  // }\r\n\r\n  sendForcedEvent(scriptName: any, eventName: any) {\r\n    const msg = `{\"name\": \"${scriptName}\", \"forceEvent\": \"true\", \"eventName\":\"${eventName}\"}`;\r\n    this.socket.emit(\"message\", msg);\r\n  }\r\n\r\n  sendForcedAction(scriptName: any, actionName: any) {\r\n    const msg = `{\"name\": \"${scriptName}\", \"forceAction\": true, \"actionName\":\"${actionName}\"}`;\r\n    this.socket.emit(\"message\", msg);\r\n  }\r\n\r\n  /** Join a channel */\r\n  join_channel(channel_id, username) {\r\n    const data = {\r\n      id: channel_id,\r\n      username: username\r\n    };\r\n    this.socket.emit(\"subscribe\", data, function(dat) {\r\n      console.log(\"JOINING CHANNEL\");\r\n      console.log(dat);\r\n    });\r\n  }\r\n\r\n  /** Leave a channel */\r\n  leave_channel(channel_id, username) {\r\n    const data = {\r\n      id: channel_id,\r\n      username: username\r\n    };\r\n    this.socket.emit(\"unsubscribe\", data, function(dat) {\r\n      console.log(dat);\r\n    });\r\n  }\r\n\r\n  /** Get all messages for the channel */\r\n  getMessages() {\r\n    return Observable.create(observer => {\r\n      this.socket.on(\"message\", message => {\r\n        // console.log(\"Socket\", message);\r\n        observer.next(message);\r\n      });\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}